/*******************************************************************************
 * Copyright (c) 2011, 2012 Cristiano Gavião - Lunifera.org.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Cristiano Gavião - initial API and implementation
 *******************************************************************************/
/*
 * generated by Xtext
 */
package org.lunifera.metamodel.dsl.behavior.stories.en.formatting;

import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.lunifera.metamodel.dsl.behavior.stories.en.services.StoryDslGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class StoryDslFormatter extends AbstractDeclarativeFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {
		StoryDslGrammarAccess gac = (StoryDslGrammarAccess) getGrammarAccess();

		// // story description

		c.setLinewrap(1, 0, 2).bounds(
				gac.getStoryAccess()
						.getDescriptionAssignment_0(),
				gac.getStoryAccess().getMetaAssignment_1());



	}

	protected TerminalRule getWSRule() {
		return (TerminalRule) GrammarUtil.findRuleForName(grammar.getGrammar(),
				"WS");
	}
}
