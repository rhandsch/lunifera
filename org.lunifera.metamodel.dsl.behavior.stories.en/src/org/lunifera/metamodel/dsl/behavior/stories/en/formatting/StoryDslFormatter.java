/*******************************************************************************
 * Copyright (c) 2011, 2012 Cristiano Gavião - Lunifera.org.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Cristiano Gavião - initial API and implementation
 *******************************************************************************/
/*
 * generated by Xtext
 */
package org.lunifera.metamodel.dsl.behavior.stories.en.formatting;

import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.lunifera.metamodel.dsl.behavior.stories.en.services.StoryDslGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class StoryDslFormatter extends AbstractDeclarativeFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {
		StoryDslGrammarAccess gac = (StoryDslGrammarAccess) getGrammarAccess();

		// story description
		// c.setLinewrap(1, 0, 2).bounds(
		// gac.getStoryAccess().getDescriptionAssignment_0(),
		// gac.getStoryAccess().getMetaAssignment_1());

		// c.setIndentationIncrement().before(
		// gac.getStoryAccess()
		// .getDescriptionDescriptionParserRuleCall_0_0());
		//
		// c.setIndentationDecrement().after(
		// gac.getStoryAccess()
		// .getDescriptionDescriptionParserRuleCall_0_0());

		// c.setIndentationIncrement().before(gac.getInOrderToRule());
		// c.setIndentationDecrement().after(gac.getInOrderToRule());
		// c.setIndentationIncrement().before(gac.getAsARule());
		// c.setIndentationDecrement().after(gac.getAsARule());
		// c.setIndentationIncrement().before(gac.getIWantToRule());
		// c.setIndentationDecrement().after(gac.getIWantToRule());

		// // Meta
		c.setLinewrap(1, 1, 1).after(gac.getMetaAccess().getMetaKeyword_1());

		for (Keyword at : gac.findKeywords("@")) {
			c.setLinewrap(1, 1, 1).before(at);
			c.setNoSpace().after(at);
		}
		for (Assignment element : gac.findAssignments(gac
				.getAbstractMetaElementRule())) {
			c.setIndentationIncrement().before(element);
			c.setIndentationDecrement().after(element);
		}

		// // Scenario
		c.setLinewrap(1, 1, 2).after(
				gac.getScenarioAccess().getNameAssignment_2());
		c.setLinewrap(1, 1, 2).before(gac.getScenarioAccess().getStepsAssignment_5());
		c.setIndentationIncrement().before(gac.getScenarioAccess().getStepsAssignment_5());
		c.setIndentationDecrement().after(gac.getScenarioAccess().getStepsAssignment_5());

		c.setLinewrap(1, 1, 2).before(gac.getAndStepRule());
		c.setIndentationIncrement().before(gac.getAndStepRule());
		c.setIndentationDecrement().after(gac.getAndStepRule());
		
		// for (Assignment element : gac.findAssignments(gac.getAndStepRule()))
		// {
		// // c.setLinewrap(1,1,1).before(element);
		// c.setIndentationIncrement().before(element);
		// c.setIndentationDecrement().after(element);
		// }
		// c.setLinewrap(1, 1, 3).around(gac.getScenarioRule());

	}

	protected TerminalRule getWSRule() {
		return (TerminalRule) GrammarUtil.findRuleForName(grammar.getGrammar(),
				"WS");
	}
}
