/*
 * generated by Xtext
 */
package org.lunifera.metamodel.dsl.software.library.scoping;

import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.lunifera.metamodel.dsl.software.library.softwareLibraryDsl.ConstraintType;
import org.lunifera.metamodel.dsl.software.library.softwareLibraryDsl.ConstraintTypeAttributeCapture;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping on
 * how and when to use it
 * 
 */
public class SoftwareLibraryDslScopeProvider extends
		AbstractDeclarativeScopeProvider {

	IScope scope_ConstraintTypeAttributeCapture_constraintTypeAttribute(
			ConstraintTypeAttributeCapture context, EReference reference) {
		IScope outerAttrs = getOuterAttrScope(context.getConstraint());
		return outerAttrs;
	}
	
	private IScope getOuterAttrScope(final ConstraintType parent) {
		System.out.println(parent);
		if (parent == null) {
			return IScope.NULLSCOPE;
		} else {
			return Scopes.scopeFor(parent.getAttributes() , getOuterAttrScope(parent.getSuperType()));
		}
	}
}
