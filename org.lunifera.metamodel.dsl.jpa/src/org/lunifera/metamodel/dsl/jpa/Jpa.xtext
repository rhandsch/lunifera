grammar org.lunifera.metamodel.dsl.jpa.Jpa with org.lunifera.metamodel.dsl.entity.Entity

generate jpa "http://www.lunifera.org/metamodel/dsl/jpa/Jpa"
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/xtext/xbase/Xtype" as xtype
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types
import "http://www.eclipse.org/Xtext/Xbase/XAnnotations"

JModel:
	jmodel=EntityModel;

Entity:
	(annotations+=EntityAnnotation)*
	'entity' name=ValidID ('extends' superType=JvmTypeReference)? '{'
	features+=AbstractFeature* '}';
	
Property:
	(annotations+=PropertyAnnotation)*
	'var' type=JvmTypeReference name=ValidID ';';

Reference:
	(annotations+=ReferenceAnnotation)*
	refType=RefType type=JvmTypeReference name=ValidID ('[' lowerBound=BoundLiteral '..' upperBound=BoundLiteral ']')';';

JpaAnnotation:
	EntityAnnotation | PropertyAnnotation | ReferenceAnnotation;

EntityAnnotation:
	EmbeddableAnnot | CachableAnnot;

PropertyAnnotation:
	IdAnnot | NullableAnnot | UniqueAnnot | LobAnnot ;

ReferenceAnnotation:
	ManyToManyAnnot | ManyToOneAnnot | OneToManyAnnot | OneToOneAnnot;

EmbeddableAnnot:
	{EmbeddableAnnot}
	'@' name='Embeddable';

CachableAnnot:
	{CachableAnnot}
	'@' name='Cachable';

IdAnnot:
	{IdAnnot}
	'@' name='ID';

NullableAnnot:
	{NullableAnnot}
	'@' name='Nullable';

UniqueAnnot:
	{UniqueAnnot}
	'@' name='Unique';

LobAnnot:
	{LobAnnot}
	'@' name='Lob';

ManyToManyAnnot:
	{ManyToManyAnnot}
	'@' name='ManyToMany' ('(' 
	('targetEntity=' targetEntity=JvmParameterizedTypeReference '.class')? 
	(', ' 'mappedBy=' mappedBy=ValidID)?
	(', ' 'cascade=CascadeType' '.' cascade=CascadeType)?
	(', ' 'fetch=Fetchtype' '.' fetch=FetchType)?
	')')?;

ManyToOneAnnot:
	{ManyToOneAnnot}
	'@' name='ManyToOne' ('(' 
	('targetEntity=' targetEntity=JvmParameterizedTypeReference '.class')? 
	(', ' 'mappedBy=' mappedBy=ValidID)?
	(', ' 'cascade=CascadeType' '.' cascade=CascadeType)?
	(', ' 'fetch=Fetchtype' '.' fetch=FetchType)?
	')')?;

//OneToManyAnnot:
//	{OneToManyAnnot}
//	'@' name='OneToMany' (
//	'(' 
//	(targetEntity=ParamTargetEntity)? 
//	(', ' mappedBy=ParamMappedBy)?
//	(', ' cascade=ParamCascade)?
//	(', ' fetch=ParamFetch)?
//	(', ' orphanRemoval=ParamOrphanRemoval)?
//	')'
//	)?;

OneToManyAnnot:
	{OneToManyAnnot}
	'@' name='OneToMany' (
	'(' 
	(targetEntity=ParamTargetEntity)? 
	(', ' mappedBy=ParamMappedBy)?
	(', ' cascade=ParamCascade)?
	(', ' fetch=ParamFetch)?
	(', ' orphanRemoval=ParamOrphanRemoval)?
	')'
	)?;


OneToOneAnnot:
	{OneToOneAnnot}
	'@' name='OneToOne' ('(' 
	('targetEntity=' targetEntity=JvmParameterizedTypeReference '.' class=classSuffix)? 
	(', ' 'mappedBy=' mappedBy=ValidID)?
	(', ' 'cascade=CascadeType' '.' cascade=CascadeType)?
	(', ' 'orphanRemoval=' orphanRemoval=booleanType)?
	(', ' 'fetch=Fetchtype' '.' fetch=FetchType)?
	')')?;
	
enum CascadeType:
	ALL='ALL' | MERGE='MERGE' | PERSIST='PERSIST' | REFRESH='REFRESH' | REMOVE='REMOVE';

enum FetchType:
	LAZY='LAZY' | EAGER='EAGER';

enum booleanType:
	true='true' | false='false';
	
enum classSuffix:
	class='class';

ParamTargetEntity:
	'targetEntity=' targetEntity=JvmParameterizedTypeReference '.' class=classSuffix;
	
ParamMappedBy:
	'mappedBy=' mappedBy=ValidID;

ParamCascade:
	'cascade=CascadeType' '.' cascade=CascadeType;

ParamFetch:
	'fetch=Fetchtype' '.' fetch=FetchType;

ParamOrphanRemoval:
	'orphanRemoval=' orphanRemoval=booleanType;
	