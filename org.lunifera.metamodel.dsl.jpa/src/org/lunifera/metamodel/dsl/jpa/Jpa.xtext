grammar org.lunifera.metamodel.dsl.jpa.Jpa with org.lunifera.metamodel.dsl.entity.Entity

generate jpa "http://www.lunifera.org/metamodel/dsl/jpa/Jpa"
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import "http://www.eclipse.org/xtext/xbase/Xtype" as xtype
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types
import "http://www.eclipse.org/Xtext/Xbase/XAnnotations"

JModel:
	jmodel=EntityModel;

Entity:
	(annotations+=EntityAnnotation)*
	'entity' name=ValidID ('extends' superType=JvmTypeReference)? '{'
	features+=AbstractFeature* '}';
	
Property:
	(annotations+=PropertyAnnotation)*
	'var' type=JvmTypeReference name=ValidID ';';

Reference:
	(annotations+=ReferenceAnnotation)*
	refType=RefType type=JvmTypeReference name=ValidID ('[' lowerBound=BoundLiteral '..' upperBound=BoundLiteral ']')';';

JpaAnnotation:
	EntityAnnotation | PropertyAnnotation | ReferenceAnnotation;

EntityAnnotation:
	EmbeddableAnnotation | CachableAnnotation;

PropertyAnnotation:
	IdAnnotation | NullableAnnotation;

ReferenceAnnotation:
	ManyToManyAnnotation;

EmbeddableAnnotation:
	{EmbeddableAnnotation}
	'@' name='Embeddable';

CachableAnnotation:
	{CachableAnnotation}
	'@' name='Cachable';

IdAnnotation:
	{IdAnnotation}
	'@' name='ID';

NullableAnnotation:
	{NullableAnnotation}
	'@' name='Nullable';

ManyToManyAnnotation:
	{ManyToManyAnnotation}
	'@' name='ManyToMany' ('(' (('targetEntity=' targetEntity=JvmParameterizedTypeReference) ', '
	'mappedBy='
	mappedBy=ValidID)?
	')')?;


