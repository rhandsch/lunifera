/*
* generated by Xtext
*/

package org.lunifera.metamodel.dsl.jpa.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.lunifera.metamodel.dsl.entity.services.EntityGrammarAccess;
import org.eclipse.xtext.xbase.annotations.services.XbaseWithAnnotationsGrammarAccess;
import org.eclipse.xtext.xbase.services.XbaseGrammarAccess;
import org.eclipse.xtext.xbase.services.XtypeGrammarAccess;

@Singleton
public class JpaGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class JModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JModel");
		private final Assignment cJmodelAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cJmodelEntityModelParserRuleCall_0 = (RuleCall)cJmodelAssignment.eContents().get(0);
		
		//JModel:
		//
		//	jmodel=EntityModel;
		public ParserRule getRule() { return rule; }

		//jmodel=EntityModel
		public Assignment getJmodelAssignment() { return cJmodelAssignment; }

		//EntityModel
		public RuleCall getJmodelEntityModelParserRuleCall_0() { return cJmodelEntityModelParserRuleCall_0; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsEntityAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameValidIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSuperTypeJvmTypeReferenceParserRuleCall_3_1_0 = (RuleCall)cSuperTypeAssignment_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFeaturesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFeaturesAbstractFeatureParserRuleCall_5_0 = (RuleCall)cFeaturesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Entity:
		//
		//	annotations+=EntityAnnotation* "entity" name=ValidID ("extends" superType=JvmTypeReference)? "{"
		//
		//	features+=AbstractFeature* "}";
		public ParserRule getRule() { return rule; }

		//annotations+=EntityAnnotation* "entity" name=ValidID ("extends" superType=JvmTypeReference)? "{"
		//
		//features+=AbstractFeature* "}"
		public Group getGroup() { return cGroup; }

		//annotations+=EntityAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//EntityAnnotation
		public RuleCall getAnnotationsEntityAnnotationParserRuleCall_0_0() { return cAnnotationsEntityAnnotationParserRuleCall_0_0; }

		//"entity"
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }

		//name=ValidID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_2_0() { return cNameValidIDParserRuleCall_2_0; }

		//("extends" superType=JvmTypeReference)?
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//superType=JvmTypeReference
		public Assignment getSuperTypeAssignment_3_1() { return cSuperTypeAssignment_3_1; }

		//JvmTypeReference
		public RuleCall getSuperTypeJvmTypeReferenceParserRuleCall_3_1_0() { return cSuperTypeJvmTypeReferenceParserRuleCall_3_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//features+=AbstractFeature*
		public Assignment getFeaturesAssignment_5() { return cFeaturesAssignment_5; }

		//AbstractFeature
		public RuleCall getFeaturesAbstractFeatureParserRuleCall_5_0() { return cFeaturesAbstractFeatureParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsPropertyAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Keyword cVarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Property:
		//
		//	annotations+=PropertyAnnotation* "var" type=JvmTypeReference name=ValidID ";";
		public ParserRule getRule() { return rule; }

		//annotations+=PropertyAnnotation* "var" type=JvmTypeReference name=ValidID ";"
		public Group getGroup() { return cGroup; }

		//annotations+=PropertyAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//PropertyAnnotation
		public RuleCall getAnnotationsPropertyAnnotationParserRuleCall_0_0() { return cAnnotationsPropertyAnnotationParserRuleCall_0_0; }

		//"var"
		public Keyword getVarKeyword_1() { return cVarKeyword_1; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsReferenceAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cRefTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefTypeRefTypeEnumRuleCall_1_0 = (RuleCall)cRefTypeAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeJvmTypeReferenceParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameValidIDParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLowerBoundAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLowerBoundBoundLiteralEnumRuleCall_4_1_0 = (RuleCall)cLowerBoundAssignment_4_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cUpperBoundAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cUpperBoundBoundLiteralEnumRuleCall_4_3_0 = (RuleCall)cUpperBoundAssignment_4_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Reference:
		//
		//	annotations+=ReferenceAnnotation* refType=RefType type=JvmTypeReference name=ValidID ("[" lowerBound=BoundLiteral
		//
		//	".." upperBound=BoundLiteral "]") ";";
		public ParserRule getRule() { return rule; }

		//annotations+=ReferenceAnnotation* refType=RefType type=JvmTypeReference name=ValidID ("[" lowerBound=BoundLiteral ".."
		//
		//upperBound=BoundLiteral "]") ";"
		public Group getGroup() { return cGroup; }

		//annotations+=ReferenceAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//ReferenceAnnotation
		public RuleCall getAnnotationsReferenceAnnotationParserRuleCall_0_0() { return cAnnotationsReferenceAnnotationParserRuleCall_0_0; }

		//refType=RefType
		public Assignment getRefTypeAssignment_1() { return cRefTypeAssignment_1; }

		//RefType
		public RuleCall getRefTypeRefTypeEnumRuleCall_1_0() { return cRefTypeRefTypeEnumRuleCall_1_0; }

		//type=JvmTypeReference
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//JvmTypeReference
		public RuleCall getTypeJvmTypeReferenceParserRuleCall_2_0() { return cTypeJvmTypeReferenceParserRuleCall_2_0; }

		//name=ValidID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ValidID
		public RuleCall getNameValidIDParserRuleCall_3_0() { return cNameValidIDParserRuleCall_3_0; }

		//"[" lowerBound=BoundLiteral ".." upperBound=BoundLiteral "]"
		public Group getGroup_4() { return cGroup_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }

		//lowerBound=BoundLiteral
		public Assignment getLowerBoundAssignment_4_1() { return cLowerBoundAssignment_4_1; }

		//BoundLiteral
		public RuleCall getLowerBoundBoundLiteralEnumRuleCall_4_1_0() { return cLowerBoundBoundLiteralEnumRuleCall_4_1_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_4_2() { return cFullStopFullStopKeyword_4_2; }

		//upperBound=BoundLiteral
		public Assignment getUpperBoundAssignment_4_3() { return cUpperBoundAssignment_4_3; }

		//BoundLiteral
		public RuleCall getUpperBoundBoundLiteralEnumRuleCall_4_3_0() { return cUpperBoundBoundLiteralEnumRuleCall_4_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_4() { return cRightSquareBracketKeyword_4_4; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class JpaAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JpaAnnotation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntityAnnotationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPropertyAnnotationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReferenceAnnotationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//JpaAnnotation:
		//
		//	EntityAnnotation | PropertyAnnotation | ReferenceAnnotation;
		public ParserRule getRule() { return rule; }

		//EntityAnnotation | PropertyAnnotation | ReferenceAnnotation
		public Alternatives getAlternatives() { return cAlternatives; }

		//EntityAnnotation
		public RuleCall getEntityAnnotationParserRuleCall_0() { return cEntityAnnotationParserRuleCall_0; }

		//PropertyAnnotation
		public RuleCall getPropertyAnnotationParserRuleCall_1() { return cPropertyAnnotationParserRuleCall_1; }

		//ReferenceAnnotation
		public RuleCall getReferenceAnnotationParserRuleCall_2() { return cReferenceAnnotationParserRuleCall_2; }
	}

	public class EntityAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntityAnnotation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmbeddableAnnotParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCachableAnnotParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EntityAnnotation:
		//
		//	EmbeddableAnnot | CachableAnnot;
		public ParserRule getRule() { return rule; }

		//EmbeddableAnnot | CachableAnnot
		public Alternatives getAlternatives() { return cAlternatives; }

		//EmbeddableAnnot
		public RuleCall getEmbeddableAnnotParserRuleCall_0() { return cEmbeddableAnnotParserRuleCall_0; }

		//CachableAnnot
		public RuleCall getCachableAnnotParserRuleCall_1() { return cCachableAnnotParserRuleCall_1; }
	}

	public class PropertyAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PropertyAnnotation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIdAnnotParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNullableAnnotParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUniqueAnnotParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLobAnnotParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//PropertyAnnotation:
		//
		//	IdAnnot | NullableAnnot | UniqueAnnot | LobAnnot;
		public ParserRule getRule() { return rule; }

		//IdAnnot | NullableAnnot | UniqueAnnot | LobAnnot
		public Alternatives getAlternatives() { return cAlternatives; }

		//IdAnnot
		public RuleCall getIdAnnotParserRuleCall_0() { return cIdAnnotParserRuleCall_0; }

		//NullableAnnot
		public RuleCall getNullableAnnotParserRuleCall_1() { return cNullableAnnotParserRuleCall_1; }

		//UniqueAnnot
		public RuleCall getUniqueAnnotParserRuleCall_2() { return cUniqueAnnotParserRuleCall_2; }

		//LobAnnot
		public RuleCall getLobAnnotParserRuleCall_3() { return cLobAnnotParserRuleCall_3; }
	}

	public class ReferenceAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceAnnotation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cManyToManyAnnotParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cManyToOneAnnotParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cOneToManyAnnotParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOneToOneAnnotParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ReferenceAnnotation:
		//
		//	ManyToManyAnnot | ManyToOneAnnot | OneToManyAnnot | OneToOneAnnot;
		public ParserRule getRule() { return rule; }

		//ManyToManyAnnot | ManyToOneAnnot | OneToManyAnnot | OneToOneAnnot
		public Alternatives getAlternatives() { return cAlternatives; }

		//ManyToManyAnnot
		public RuleCall getManyToManyAnnotParserRuleCall_0() { return cManyToManyAnnotParserRuleCall_0; }

		//ManyToOneAnnot
		public RuleCall getManyToOneAnnotParserRuleCall_1() { return cManyToOneAnnotParserRuleCall_1; }

		//OneToManyAnnot
		public RuleCall getOneToManyAnnotParserRuleCall_2() { return cOneToManyAnnotParserRuleCall_2; }

		//OneToOneAnnot
		public RuleCall getOneToOneAnnotParserRuleCall_3() { return cOneToOneAnnotParserRuleCall_3; }
	}

	public class EmbeddableAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EmbeddableAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEmbeddableAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameEmbeddableKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		
		//EmbeddableAnnot:
		//
		//	{EmbeddableAnnot} "@" name="Embeddable";
		public ParserRule getRule() { return rule; }

		//{EmbeddableAnnot} "@" name="Embeddable"
		public Group getGroup() { return cGroup; }

		//{EmbeddableAnnot}
		public Action getEmbeddableAnnotAction_0() { return cEmbeddableAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="Embeddable"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"Embeddable"
		public Keyword getNameEmbeddableKeyword_2_0() { return cNameEmbeddableKeyword_2_0; }
	}

	public class CachableAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CachableAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCachableAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameCachableKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		
		//CachableAnnot:
		//
		//	{CachableAnnot} "@" name="Cachable";
		public ParserRule getRule() { return rule; }

		//{CachableAnnot} "@" name="Cachable"
		public Group getGroup() { return cGroup; }

		//{CachableAnnot}
		public Action getCachableAnnotAction_0() { return cCachableAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="Cachable"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"Cachable"
		public Keyword getNameCachableKeyword_2_0() { return cNameCachableKeyword_2_0; }
	}

	public class IdAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IdAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIdAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameIDKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		
		//IdAnnot:
		//
		//	{IdAnnot} "@" name="ID";
		public ParserRule getRule() { return rule; }

		//{IdAnnot} "@" name="ID"
		public Group getGroup() { return cGroup; }

		//{IdAnnot}
		public Action getIdAnnotAction_0() { return cIdAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="ID"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"ID"
		public Keyword getNameIDKeyword_2_0() { return cNameIDKeyword_2_0; }
	}

	public class NullableAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NullableAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNullableAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameNullableKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		
		//NullableAnnot:
		//
		//	{NullableAnnot} "@" name="Nullable";
		public ParserRule getRule() { return rule; }

		//{NullableAnnot} "@" name="Nullable"
		public Group getGroup() { return cGroup; }

		//{NullableAnnot}
		public Action getNullableAnnotAction_0() { return cNullableAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="Nullable"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"Nullable"
		public Keyword getNameNullableKeyword_2_0() { return cNameNullableKeyword_2_0; }
	}

	public class UniqueAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UniqueAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUniqueAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameUniqueKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		
		//UniqueAnnot:
		//
		//	{UniqueAnnot} "@" name="Unique";
		public ParserRule getRule() { return rule; }

		//{UniqueAnnot} "@" name="Unique"
		public Group getGroup() { return cGroup; }

		//{UniqueAnnot}
		public Action getUniqueAnnotAction_0() { return cUniqueAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="Unique"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"Unique"
		public Keyword getNameUniqueKeyword_2_0() { return cNameUniqueKeyword_2_0; }
	}

	public class LobAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LobAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLobAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameLobKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		
		//LobAnnot:
		//
		//	{LobAnnot} "@" name="Lob";
		public ParserRule getRule() { return rule; }

		//{LobAnnot} "@" name="Lob"
		public Group getGroup() { return cGroup; }

		//{LobAnnot}
		public Action getLobAnnotAction_0() { return cLobAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="Lob"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"Lob"
		public Keyword getNameLobKeyword_2_0() { return cNameLobKeyword_2_0; }
	}

	public class ManyToManyAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ManyToManyAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cManyToManyAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameManyToManyKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cTargetEntityKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cTargetEntityAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0 = (RuleCall)cTargetEntityAssignment_3_1_1.eContents().get(0);
		private final Keyword cClassKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaSpaceKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cMappedByKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cMappedByAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cMappedByValidIDParserRuleCall_3_2_2_0 = (RuleCall)cMappedByAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaSpaceKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cCascadeCascadeTypeKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Keyword cFullStopKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Assignment cCascadeAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cCascadeCascadeTypeEnumRuleCall_3_3_3_0 = (RuleCall)cCascadeAssignment_3_3_3.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cCommaSpaceKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cFetchFetchtypeKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Keyword cFullStopKeyword_3_4_2 = (Keyword)cGroup_3_4.eContents().get(2);
		private final Assignment cFetchAssignment_3_4_3 = (Assignment)cGroup_3_4.eContents().get(3);
		private final RuleCall cFetchFetchTypeEnumRuleCall_3_4_3_0 = (RuleCall)cFetchAssignment_3_4_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//ManyToManyAnnot:
		//
		//	{ManyToManyAnnot} "@" name="ManyToMany" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")?
		//
		//	(", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype"
		//
		//	"." fetch=FetchType)? ")")?;
		public ParserRule getRule() { return rule; }

		//{ManyToManyAnnot} "@" name="ManyToMany" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")?
		//
		//(", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype" "."
		//
		//fetch=FetchType)? ")")?
		public Group getGroup() { return cGroup; }

		//{ManyToManyAnnot}
		public Action getManyToManyAnnotAction_0() { return cManyToManyAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="ManyToMany"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"ManyToMany"
		public Keyword getNameManyToManyKeyword_2_0() { return cNameManyToManyKeyword_2_0; }

		//("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")? (", " "mappedBy=" mappedBy=ValidID)? (", "
		//
		//"cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype" "." fetch=FetchType)? ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"targetEntity="
		public Keyword getTargetEntityKeyword_3_1_0() { return cTargetEntityKeyword_3_1_0; }

		//targetEntity=JvmParameterizedTypeReference
		public Assignment getTargetEntityAssignment_3_1_1() { return cTargetEntityAssignment_3_1_1; }

		//JvmParameterizedTypeReference
		public RuleCall getTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0() { return cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0; }

		//".class"
		public Keyword getClassKeyword_3_1_2() { return cClassKeyword_3_1_2; }

		//(", " "mappedBy=" mappedBy=ValidID)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//", "
		public Keyword getCommaSpaceKeyword_3_2_0() { return cCommaSpaceKeyword_3_2_0; }

		//"mappedBy="
		public Keyword getMappedByKeyword_3_2_1() { return cMappedByKeyword_3_2_1; }

		//mappedBy=ValidID
		public Assignment getMappedByAssignment_3_2_2() { return cMappedByAssignment_3_2_2; }

		//ValidID
		public RuleCall getMappedByValidIDParserRuleCall_3_2_2_0() { return cMappedByValidIDParserRuleCall_3_2_2_0; }

		//(", " "cascade=CascadeType" "." cascade=CascadeType)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//", "
		public Keyword getCommaSpaceKeyword_3_3_0() { return cCommaSpaceKeyword_3_3_0; }

		//"cascade=CascadeType"
		public Keyword getCascadeCascadeTypeKeyword_3_3_1() { return cCascadeCascadeTypeKeyword_3_3_1; }

		//"."
		public Keyword getFullStopKeyword_3_3_2() { return cFullStopKeyword_3_3_2; }

		//cascade=CascadeType
		public Assignment getCascadeAssignment_3_3_3() { return cCascadeAssignment_3_3_3; }

		//CascadeType
		public RuleCall getCascadeCascadeTypeEnumRuleCall_3_3_3_0() { return cCascadeCascadeTypeEnumRuleCall_3_3_3_0; }

		//(", " "fetch=Fetchtype" "." fetch=FetchType)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//", "
		public Keyword getCommaSpaceKeyword_3_4_0() { return cCommaSpaceKeyword_3_4_0; }

		//"fetch=Fetchtype"
		public Keyword getFetchFetchtypeKeyword_3_4_1() { return cFetchFetchtypeKeyword_3_4_1; }

		//"."
		public Keyword getFullStopKeyword_3_4_2() { return cFullStopKeyword_3_4_2; }

		//fetch=FetchType
		public Assignment getFetchAssignment_3_4_3() { return cFetchAssignment_3_4_3; }

		//FetchType
		public RuleCall getFetchFetchTypeEnumRuleCall_3_4_3_0() { return cFetchFetchTypeEnumRuleCall_3_4_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_5() { return cRightParenthesisKeyword_3_5; }
	}

	public class ManyToOneAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ManyToOneAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cManyToOneAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameManyToOneKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cTargetEntityKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cTargetEntityAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0 = (RuleCall)cTargetEntityAssignment_3_1_1.eContents().get(0);
		private final Keyword cClassKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaSpaceKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cMappedByKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cMappedByAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cMappedByValidIDParserRuleCall_3_2_2_0 = (RuleCall)cMappedByAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaSpaceKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cCascadeCascadeTypeKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Keyword cFullStopKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Assignment cCascadeAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cCascadeCascadeTypeEnumRuleCall_3_3_3_0 = (RuleCall)cCascadeAssignment_3_3_3.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cCommaSpaceKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cFetchFetchtypeKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Keyword cFullStopKeyword_3_4_2 = (Keyword)cGroup_3_4.eContents().get(2);
		private final Assignment cFetchAssignment_3_4_3 = (Assignment)cGroup_3_4.eContents().get(3);
		private final RuleCall cFetchFetchTypeEnumRuleCall_3_4_3_0 = (RuleCall)cFetchAssignment_3_4_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		
		//ManyToOneAnnot:
		//
		//	{ManyToOneAnnot} "@" name="ManyToOne" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")?
		//
		//	(", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype"
		//
		//	"." fetch=FetchType)? ")")?;
		public ParserRule getRule() { return rule; }

		//{ManyToOneAnnot} "@" name="ManyToOne" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")? (", "
		//
		//"mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype" "."
		//
		//fetch=FetchType)? ")")?
		public Group getGroup() { return cGroup; }

		//{ManyToOneAnnot}
		public Action getManyToOneAnnotAction_0() { return cManyToOneAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="ManyToOne"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"ManyToOne"
		public Keyword getNameManyToOneKeyword_2_0() { return cNameManyToOneKeyword_2_0; }

		//("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")? (", " "mappedBy=" mappedBy=ValidID)? (", "
		//
		//"cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype" "." fetch=FetchType)? ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"targetEntity="
		public Keyword getTargetEntityKeyword_3_1_0() { return cTargetEntityKeyword_3_1_0; }

		//targetEntity=JvmParameterizedTypeReference
		public Assignment getTargetEntityAssignment_3_1_1() { return cTargetEntityAssignment_3_1_1; }

		//JvmParameterizedTypeReference
		public RuleCall getTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0() { return cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0; }

		//".class"
		public Keyword getClassKeyword_3_1_2() { return cClassKeyword_3_1_2; }

		//(", " "mappedBy=" mappedBy=ValidID)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//", "
		public Keyword getCommaSpaceKeyword_3_2_0() { return cCommaSpaceKeyword_3_2_0; }

		//"mappedBy="
		public Keyword getMappedByKeyword_3_2_1() { return cMappedByKeyword_3_2_1; }

		//mappedBy=ValidID
		public Assignment getMappedByAssignment_3_2_2() { return cMappedByAssignment_3_2_2; }

		//ValidID
		public RuleCall getMappedByValidIDParserRuleCall_3_2_2_0() { return cMappedByValidIDParserRuleCall_3_2_2_0; }

		//(", " "cascade=CascadeType" "." cascade=CascadeType)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//", "
		public Keyword getCommaSpaceKeyword_3_3_0() { return cCommaSpaceKeyword_3_3_0; }

		//"cascade=CascadeType"
		public Keyword getCascadeCascadeTypeKeyword_3_3_1() { return cCascadeCascadeTypeKeyword_3_3_1; }

		//"."
		public Keyword getFullStopKeyword_3_3_2() { return cFullStopKeyword_3_3_2; }

		//cascade=CascadeType
		public Assignment getCascadeAssignment_3_3_3() { return cCascadeAssignment_3_3_3; }

		//CascadeType
		public RuleCall getCascadeCascadeTypeEnumRuleCall_3_3_3_0() { return cCascadeCascadeTypeEnumRuleCall_3_3_3_0; }

		//(", " "fetch=Fetchtype" "." fetch=FetchType)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//", "
		public Keyword getCommaSpaceKeyword_3_4_0() { return cCommaSpaceKeyword_3_4_0; }

		//"fetch=Fetchtype"
		public Keyword getFetchFetchtypeKeyword_3_4_1() { return cFetchFetchtypeKeyword_3_4_1; }

		//"."
		public Keyword getFullStopKeyword_3_4_2() { return cFullStopKeyword_3_4_2; }

		//fetch=FetchType
		public Assignment getFetchAssignment_3_4_3() { return cFetchAssignment_3_4_3; }

		//FetchType
		public RuleCall getFetchFetchTypeEnumRuleCall_3_4_3_0() { return cFetchFetchTypeEnumRuleCall_3_4_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_5() { return cRightParenthesisKeyword_3_5; }
	}

	public class OneToManyAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OneToManyAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOneToManyAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameOneToManyKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTargetEntityAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTargetEntityParamTargetEntityParserRuleCall_3_1_0 = (RuleCall)cTargetEntityAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaSpaceKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cMappedByAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cMappedByParamMappedByParserRuleCall_3_2_1_0 = (RuleCall)cMappedByAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaSpaceKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cCascadeAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cCascadeParamCascadeParserRuleCall_3_3_1_0 = (RuleCall)cCascadeAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cCommaSpaceKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Assignment cFetchAssignment_3_4_1 = (Assignment)cGroup_3_4.eContents().get(1);
		private final RuleCall cFetchParamFetchParserRuleCall_3_4_1_0 = (RuleCall)cFetchAssignment_3_4_1.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cGroup_3.eContents().get(5);
		private final Keyword cCommaSpaceKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Assignment cOrphanRemovalAssignment_3_5_1 = (Assignment)cGroup_3_5.eContents().get(1);
		private final RuleCall cOrphanRemovalParamOrphanRemovalParserRuleCall_3_5_1_0 = (RuleCall)cOrphanRemovalAssignment_3_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_6 = (Keyword)cGroup_3.eContents().get(6);
		
		//OneToManyAnnot:
		//
		//	{OneToManyAnnot} "@" name="OneToMany" ("(" targetEntity=ParamTargetEntity? (", " mappedBy=ParamMappedBy)? (", "
		//
		//	cascade=ParamCascade)? (", " fetch=ParamFetch)? (", " orphanRemoval=ParamOrphanRemoval)? ")")?;
		public ParserRule getRule() { return rule; }

		//{OneToManyAnnot} "@" name="OneToMany" ("(" targetEntity=ParamTargetEntity? (", " mappedBy=ParamMappedBy)? (", "
		//
		//cascade=ParamCascade)? (", " fetch=ParamFetch)? (", " orphanRemoval=ParamOrphanRemoval)? ")")?
		public Group getGroup() { return cGroup; }

		//{OneToManyAnnot}
		public Action getOneToManyAnnotAction_0() { return cOneToManyAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="OneToMany"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"OneToMany"
		public Keyword getNameOneToManyKeyword_2_0() { return cNameOneToManyKeyword_2_0; }

		//("(" targetEntity=ParamTargetEntity? (", " mappedBy=ParamMappedBy)? (", " cascade=ParamCascade)? (", "
		//
		//fetch=ParamFetch)? (", " orphanRemoval=ParamOrphanRemoval)? ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//targetEntity=ParamTargetEntity?
		public Assignment getTargetEntityAssignment_3_1() { return cTargetEntityAssignment_3_1; }

		//ParamTargetEntity
		public RuleCall getTargetEntityParamTargetEntityParserRuleCall_3_1_0() { return cTargetEntityParamTargetEntityParserRuleCall_3_1_0; }

		//(", " mappedBy=ParamMappedBy)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//", "
		public Keyword getCommaSpaceKeyword_3_2_0() { return cCommaSpaceKeyword_3_2_0; }

		//mappedBy=ParamMappedBy
		public Assignment getMappedByAssignment_3_2_1() { return cMappedByAssignment_3_2_1; }

		//ParamMappedBy
		public RuleCall getMappedByParamMappedByParserRuleCall_3_2_1_0() { return cMappedByParamMappedByParserRuleCall_3_2_1_0; }

		//(", " cascade=ParamCascade)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//", "
		public Keyword getCommaSpaceKeyword_3_3_0() { return cCommaSpaceKeyword_3_3_0; }

		//cascade=ParamCascade
		public Assignment getCascadeAssignment_3_3_1() { return cCascadeAssignment_3_3_1; }

		//ParamCascade
		public RuleCall getCascadeParamCascadeParserRuleCall_3_3_1_0() { return cCascadeParamCascadeParserRuleCall_3_3_1_0; }

		//(", " fetch=ParamFetch)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//", "
		public Keyword getCommaSpaceKeyword_3_4_0() { return cCommaSpaceKeyword_3_4_0; }

		//fetch=ParamFetch
		public Assignment getFetchAssignment_3_4_1() { return cFetchAssignment_3_4_1; }

		//ParamFetch
		public RuleCall getFetchParamFetchParserRuleCall_3_4_1_0() { return cFetchParamFetchParserRuleCall_3_4_1_0; }

		//(", " orphanRemoval=ParamOrphanRemoval)?
		public Group getGroup_3_5() { return cGroup_3_5; }

		//", "
		public Keyword getCommaSpaceKeyword_3_5_0() { return cCommaSpaceKeyword_3_5_0; }

		//orphanRemoval=ParamOrphanRemoval
		public Assignment getOrphanRemovalAssignment_3_5_1() { return cOrphanRemovalAssignment_3_5_1; }

		//ParamOrphanRemoval
		public RuleCall getOrphanRemovalParamOrphanRemovalParserRuleCall_3_5_1_0() { return cOrphanRemovalParamOrphanRemovalParserRuleCall_3_5_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_6() { return cRightParenthesisKeyword_3_6; }
	}

	public class OneToOneAnnotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OneToOneAnnot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOneToOneAnnotAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameOneToOneKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cTargetEntityKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cTargetEntityAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0 = (RuleCall)cTargetEntityAssignment_3_1_1.eContents().get(0);
		private final Keyword cFullStopKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cClassAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cClassClassSuffixEnumRuleCall_3_1_3_0 = (RuleCall)cClassAssignment_3_1_3.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaSpaceKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cMappedByKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cMappedByAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cMappedByValidIDParserRuleCall_3_2_2_0 = (RuleCall)cMappedByAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaSpaceKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cCascadeCascadeTypeKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Keyword cFullStopKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Assignment cCascadeAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cCascadeCascadeTypeEnumRuleCall_3_3_3_0 = (RuleCall)cCascadeAssignment_3_3_3.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cCommaSpaceKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cOrphanRemovalKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cOrphanRemovalAssignment_3_4_2 = (Assignment)cGroup_3_4.eContents().get(2);
		private final RuleCall cOrphanRemovalBooleanTypeEnumRuleCall_3_4_2_0 = (RuleCall)cOrphanRemovalAssignment_3_4_2.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cGroup_3.eContents().get(5);
		private final Keyword cCommaSpaceKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Keyword cFetchFetchtypeKeyword_3_5_1 = (Keyword)cGroup_3_5.eContents().get(1);
		private final Keyword cFullStopKeyword_3_5_2 = (Keyword)cGroup_3_5.eContents().get(2);
		private final Assignment cFetchAssignment_3_5_3 = (Assignment)cGroup_3_5.eContents().get(3);
		private final RuleCall cFetchFetchTypeEnumRuleCall_3_5_3_0 = (RuleCall)cFetchAssignment_3_5_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_6 = (Keyword)cGroup_3.eContents().get(6);
		
		//OneToOneAnnot:
		//
		//	{OneToOneAnnot} "@" name="OneToOne" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference "."
		//
		//	class=classSuffix)? (", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", "
		//
		//	"orphanRemoval=" orphanRemoval=booleanType)? (", " "fetch=Fetchtype" "." fetch=FetchType)? ")")?;
		public ParserRule getRule() { return rule; }

		//{OneToOneAnnot} "@" name="OneToOne" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference "."
		//
		//class=classSuffix)? (", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", "
		//
		//"orphanRemoval=" orphanRemoval=booleanType)? (", " "fetch=Fetchtype" "." fetch=FetchType)? ")")?
		public Group getGroup() { return cGroup; }

		//{OneToOneAnnot}
		public Action getOneToOneAnnotAction_0() { return cOneToOneAnnotAction_0; }

		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name="OneToOne"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"OneToOne"
		public Keyword getNameOneToOneKeyword_2_0() { return cNameOneToOneKeyword_2_0; }

		//("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference "." class=classSuffix)? (", " "mappedBy="
		//
		//mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", " "orphanRemoval="
		//
		//orphanRemoval=booleanType)? (", " "fetch=Fetchtype" "." fetch=FetchType)? ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//("targetEntity=" targetEntity=JvmParameterizedTypeReference "." class=classSuffix)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"targetEntity="
		public Keyword getTargetEntityKeyword_3_1_0() { return cTargetEntityKeyword_3_1_0; }

		//targetEntity=JvmParameterizedTypeReference
		public Assignment getTargetEntityAssignment_3_1_1() { return cTargetEntityAssignment_3_1_1; }

		//JvmParameterizedTypeReference
		public RuleCall getTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0() { return cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_3_1_1_0; }

		//"."
		public Keyword getFullStopKeyword_3_1_2() { return cFullStopKeyword_3_1_2; }

		//class=classSuffix
		public Assignment getClassAssignment_3_1_3() { return cClassAssignment_3_1_3; }

		//classSuffix
		public RuleCall getClassClassSuffixEnumRuleCall_3_1_3_0() { return cClassClassSuffixEnumRuleCall_3_1_3_0; }

		//(", " "mappedBy=" mappedBy=ValidID)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//", "
		public Keyword getCommaSpaceKeyword_3_2_0() { return cCommaSpaceKeyword_3_2_0; }

		//"mappedBy="
		public Keyword getMappedByKeyword_3_2_1() { return cMappedByKeyword_3_2_1; }

		//mappedBy=ValidID
		public Assignment getMappedByAssignment_3_2_2() { return cMappedByAssignment_3_2_2; }

		//ValidID
		public RuleCall getMappedByValidIDParserRuleCall_3_2_2_0() { return cMappedByValidIDParserRuleCall_3_2_2_0; }

		//(", " "cascade=CascadeType" "." cascade=CascadeType)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//", "
		public Keyword getCommaSpaceKeyword_3_3_0() { return cCommaSpaceKeyword_3_3_0; }

		//"cascade=CascadeType"
		public Keyword getCascadeCascadeTypeKeyword_3_3_1() { return cCascadeCascadeTypeKeyword_3_3_1; }

		//"."
		public Keyword getFullStopKeyword_3_3_2() { return cFullStopKeyword_3_3_2; }

		//cascade=CascadeType
		public Assignment getCascadeAssignment_3_3_3() { return cCascadeAssignment_3_3_3; }

		//CascadeType
		public RuleCall getCascadeCascadeTypeEnumRuleCall_3_3_3_0() { return cCascadeCascadeTypeEnumRuleCall_3_3_3_0; }

		//(", " "orphanRemoval=" orphanRemoval=booleanType)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//", "
		public Keyword getCommaSpaceKeyword_3_4_0() { return cCommaSpaceKeyword_3_4_0; }

		//"orphanRemoval="
		public Keyword getOrphanRemovalKeyword_3_4_1() { return cOrphanRemovalKeyword_3_4_1; }

		//orphanRemoval=booleanType
		public Assignment getOrphanRemovalAssignment_3_4_2() { return cOrphanRemovalAssignment_3_4_2; }

		//booleanType
		public RuleCall getOrphanRemovalBooleanTypeEnumRuleCall_3_4_2_0() { return cOrphanRemovalBooleanTypeEnumRuleCall_3_4_2_0; }

		//(", " "fetch=Fetchtype" "." fetch=FetchType)?
		public Group getGroup_3_5() { return cGroup_3_5; }

		//", "
		public Keyword getCommaSpaceKeyword_3_5_0() { return cCommaSpaceKeyword_3_5_0; }

		//"fetch=Fetchtype"
		public Keyword getFetchFetchtypeKeyword_3_5_1() { return cFetchFetchtypeKeyword_3_5_1; }

		//"."
		public Keyword getFullStopKeyword_3_5_2() { return cFullStopKeyword_3_5_2; }

		//fetch=FetchType
		public Assignment getFetchAssignment_3_5_3() { return cFetchAssignment_3_5_3; }

		//FetchType
		public RuleCall getFetchFetchTypeEnumRuleCall_3_5_3_0() { return cFetchFetchTypeEnumRuleCall_3_5_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_6() { return cRightParenthesisKeyword_3_6; }
	}

	public class ParamTargetEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParamTargetEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTargetEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTargetEntityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_1_0 = (RuleCall)cTargetEntityAssignment_1.eContents().get(0);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassClassSuffixEnumRuleCall_3_0 = (RuleCall)cClassAssignment_3.eContents().get(0);
		
		//ParamTargetEntity:
		//
		//	"targetEntity=" targetEntity=JvmParameterizedTypeReference "." class=classSuffix;
		public ParserRule getRule() { return rule; }

		//"targetEntity=" targetEntity=JvmParameterizedTypeReference "." class=classSuffix
		public Group getGroup() { return cGroup; }

		//"targetEntity="
		public Keyword getTargetEntityKeyword_0() { return cTargetEntityKeyword_0; }

		//targetEntity=JvmParameterizedTypeReference
		public Assignment getTargetEntityAssignment_1() { return cTargetEntityAssignment_1; }

		//JvmParameterizedTypeReference
		public RuleCall getTargetEntityJvmParameterizedTypeReferenceParserRuleCall_1_0() { return cTargetEntityJvmParameterizedTypeReferenceParserRuleCall_1_0; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//class=classSuffix
		public Assignment getClassAssignment_3() { return cClassAssignment_3; }

		//classSuffix
		public RuleCall getClassClassSuffixEnumRuleCall_3_0() { return cClassClassSuffixEnumRuleCall_3_0; }
	}

	public class ParamMappedByElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParamMappedBy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMappedByKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMappedByAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMappedByValidIDParserRuleCall_1_0 = (RuleCall)cMappedByAssignment_1.eContents().get(0);
		
		//ParamMappedBy:
		//
		//	"mappedBy=" mappedBy=ValidID;
		public ParserRule getRule() { return rule; }

		//"mappedBy=" mappedBy=ValidID
		public Group getGroup() { return cGroup; }

		//"mappedBy="
		public Keyword getMappedByKeyword_0() { return cMappedByKeyword_0; }

		//mappedBy=ValidID
		public Assignment getMappedByAssignment_1() { return cMappedByAssignment_1; }

		//ValidID
		public RuleCall getMappedByValidIDParserRuleCall_1_0() { return cMappedByValidIDParserRuleCall_1_0; }
	}

	public class ParamCascadeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParamCascade");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCascadeCascadeTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCascadeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCascadeCascadeTypeEnumRuleCall_2_0 = (RuleCall)cCascadeAssignment_2.eContents().get(0);
		
		//ParamCascade:
		//
		//	"cascade=CascadeType" "." cascade=CascadeType;
		public ParserRule getRule() { return rule; }

		//"cascade=CascadeType" "." cascade=CascadeType
		public Group getGroup() { return cGroup; }

		//"cascade=CascadeType"
		public Keyword getCascadeCascadeTypeKeyword_0() { return cCascadeCascadeTypeKeyword_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//cascade=CascadeType
		public Assignment getCascadeAssignment_2() { return cCascadeAssignment_2; }

		//CascadeType
		public RuleCall getCascadeCascadeTypeEnumRuleCall_2_0() { return cCascadeCascadeTypeEnumRuleCall_2_0; }
	}

	public class ParamFetchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParamFetch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFetchFetchtypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFetchAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFetchFetchTypeEnumRuleCall_2_0 = (RuleCall)cFetchAssignment_2.eContents().get(0);
		
		//ParamFetch:
		//
		//	"fetch=Fetchtype" "." fetch=FetchType;
		public ParserRule getRule() { return rule; }

		//"fetch=Fetchtype" "." fetch=FetchType
		public Group getGroup() { return cGroup; }

		//"fetch=Fetchtype"
		public Keyword getFetchFetchtypeKeyword_0() { return cFetchFetchtypeKeyword_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//fetch=FetchType
		public Assignment getFetchAssignment_2() { return cFetchAssignment_2; }

		//FetchType
		public RuleCall getFetchFetchTypeEnumRuleCall_2_0() { return cFetchFetchTypeEnumRuleCall_2_0; }
	}

	public class ParamOrphanRemovalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParamOrphanRemoval");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrphanRemovalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOrphanRemovalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOrphanRemovalBooleanTypeEnumRuleCall_1_0 = (RuleCall)cOrphanRemovalAssignment_1.eContents().get(0);
		
		//ParamOrphanRemoval:
		//
		//	"orphanRemoval=" orphanRemoval=booleanType;
		public ParserRule getRule() { return rule; }

		//"orphanRemoval=" orphanRemoval=booleanType
		public Group getGroup() { return cGroup; }

		//"orphanRemoval="
		public Keyword getOrphanRemovalKeyword_0() { return cOrphanRemovalKeyword_0; }

		//orphanRemoval=booleanType
		public Assignment getOrphanRemovalAssignment_1() { return cOrphanRemovalAssignment_1; }

		//booleanType
		public RuleCall getOrphanRemovalBooleanTypeEnumRuleCall_1_0() { return cOrphanRemovalBooleanTypeEnumRuleCall_1_0; }
	}
	
	
	public class CascadeTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CascadeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cALLEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cALLALLKeyword_0_0 = (Keyword)cALLEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMERGEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMERGEMERGEKeyword_1_0 = (Keyword)cMERGEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPERSISTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPERSISTPERSISTKeyword_2_0 = (Keyword)cPERSISTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cREFRESHEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cREFRESHREFRESHKeyword_3_0 = (Keyword)cREFRESHEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cREMOVEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cREMOVEREMOVEKeyword_4_0 = (Keyword)cREMOVEEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum CascadeType:
		//
		//	ALL | MERGE | PERSIST | REFRESH | REMOVE;
		public EnumRule getRule() { return rule; }

		//ALL | MERGE | PERSIST | REFRESH | REMOVE
		public Alternatives getAlternatives() { return cAlternatives; }

		//ALL
		public EnumLiteralDeclaration getALLEnumLiteralDeclaration_0() { return cALLEnumLiteralDeclaration_0; }

		//"ALL"
		public Keyword getALLALLKeyword_0_0() { return cALLALLKeyword_0_0; }

		//MERGE
		public EnumLiteralDeclaration getMERGEEnumLiteralDeclaration_1() { return cMERGEEnumLiteralDeclaration_1; }

		//"MERGE"
		public Keyword getMERGEMERGEKeyword_1_0() { return cMERGEMERGEKeyword_1_0; }

		//PERSIST
		public EnumLiteralDeclaration getPERSISTEnumLiteralDeclaration_2() { return cPERSISTEnumLiteralDeclaration_2; }

		//"PERSIST"
		public Keyword getPERSISTPERSISTKeyword_2_0() { return cPERSISTPERSISTKeyword_2_0; }

		//REFRESH
		public EnumLiteralDeclaration getREFRESHEnumLiteralDeclaration_3() { return cREFRESHEnumLiteralDeclaration_3; }

		//"REFRESH"
		public Keyword getREFRESHREFRESHKeyword_3_0() { return cREFRESHREFRESHKeyword_3_0; }

		//REMOVE
		public EnumLiteralDeclaration getREMOVEEnumLiteralDeclaration_4() { return cREMOVEEnumLiteralDeclaration_4; }

		//"REMOVE"
		public Keyword getREMOVEREMOVEKeyword_4_0() { return cREMOVEREMOVEKeyword_4_0; }
	}

	public class FetchTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "FetchType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLAZYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLAZYLAZYKeyword_0_0 = (Keyword)cLAZYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEAGEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEAGEREAGERKeyword_1_0 = (Keyword)cEAGEREnumLiteralDeclaration_1.eContents().get(0);
		
		//enum FetchType:
		//
		//	LAZY | EAGER;
		public EnumRule getRule() { return rule; }

		//LAZY | EAGER
		public Alternatives getAlternatives() { return cAlternatives; }

		//LAZY
		public EnumLiteralDeclaration getLAZYEnumLiteralDeclaration_0() { return cLAZYEnumLiteralDeclaration_0; }

		//"LAZY"
		public Keyword getLAZYLAZYKeyword_0_0() { return cLAZYLAZYKeyword_0_0; }

		//EAGER
		public EnumLiteralDeclaration getEAGEREnumLiteralDeclaration_1() { return cEAGEREnumLiteralDeclaration_1; }

		//"EAGER"
		public Keyword getEAGEREAGERKeyword_1_0() { return cEAGEREAGERKeyword_1_0; }
	}

	public class BooleanTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "booleanType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTrueEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTrueTrueKeyword_0_0 = (Keyword)cTrueEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFalseEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFalseFalseKeyword_1_0 = (Keyword)cFalseEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum booleanType:
		//
		//	true | false;
		public EnumRule getRule() { return rule; }

		//true | false
		public Alternatives getAlternatives() { return cAlternatives; }

		//true
		public EnumLiteralDeclaration getTrueEnumLiteralDeclaration_0() { return cTrueEnumLiteralDeclaration_0; }

		//"true"
		public Keyword getTrueTrueKeyword_0_0() { return cTrueTrueKeyword_0_0; }

		//false
		public EnumLiteralDeclaration getFalseEnumLiteralDeclaration_1() { return cFalseEnumLiteralDeclaration_1; }

		//"false"
		public Keyword getFalseFalseKeyword_1_0() { return cFalseFalseKeyword_1_0; }
	}

	public class ClassSuffixElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "classSuffix");
		private final EnumLiteralDeclaration cClassEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cClassClassKeyword_0 = (Keyword)cClassEnumLiteralDeclaration.eContents().get(0);
		
		//enum classSuffix:
		//
		//	class;
		public EnumRule getRule() { return rule; }

		//class
		public EnumLiteralDeclaration getClassEnumLiteralDeclaration() { return cClassEnumLiteralDeclaration; }

		//"class"
		public Keyword getClassClassKeyword_0() { return cClassClassKeyword_0; }
	}
	
	private JModelElements pJModel;
	private EntityElements pEntity;
	private PropertyElements pProperty;
	private ReferenceElements pReference;
	private JpaAnnotationElements pJpaAnnotation;
	private EntityAnnotationElements pEntityAnnotation;
	private PropertyAnnotationElements pPropertyAnnotation;
	private ReferenceAnnotationElements pReferenceAnnotation;
	private EmbeddableAnnotElements pEmbeddableAnnot;
	private CachableAnnotElements pCachableAnnot;
	private IdAnnotElements pIdAnnot;
	private NullableAnnotElements pNullableAnnot;
	private UniqueAnnotElements pUniqueAnnot;
	private LobAnnotElements pLobAnnot;
	private ManyToManyAnnotElements pManyToManyAnnot;
	private ManyToOneAnnotElements pManyToOneAnnot;
	private OneToManyAnnotElements pOneToManyAnnot;
	private OneToOneAnnotElements pOneToOneAnnot;
	private CascadeTypeElements unknownRuleCascadeType;
	private FetchTypeElements unknownRuleFetchType;
	private BooleanTypeElements unknownRuleBooleanType;
	private ClassSuffixElements unknownRuleClassSuffix;
	private ParamTargetEntityElements pParamTargetEntity;
	private ParamMappedByElements pParamMappedBy;
	private ParamCascadeElements pParamCascade;
	private ParamFetchElements pParamFetch;
	private ParamOrphanRemovalElements pParamOrphanRemoval;
	
	private final Grammar grammar;

	private EntityGrammarAccess gaEntity;

	@Inject
	public JpaGrammarAccess(GrammarProvider grammarProvider,
		EntityGrammarAccess gaEntity) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaEntity = gaEntity;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.lunifera.metamodel.dsl.jpa.Jpa".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public EntityGrammarAccess getEntityGrammarAccess() {
		return gaEntity;
	}

	
	//JModel:
	//
	//	jmodel=EntityModel;
	public JModelElements getJModelAccess() {
		return (pJModel != null) ? pJModel : (pJModel = new JModelElements());
	}
	
	public ParserRule getJModelRule() {
		return getJModelAccess().getRule();
	}

	//Entity:
	//
	//	annotations+=EntityAnnotation* "entity" name=ValidID ("extends" superType=JvmTypeReference)? "{"
	//
	//	features+=AbstractFeature* "}";
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Property:
	//
	//	annotations+=PropertyAnnotation* "var" type=JvmTypeReference name=ValidID ";";
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//Reference:
	//
	//	annotations+=ReferenceAnnotation* refType=RefType type=JvmTypeReference name=ValidID ("[" lowerBound=BoundLiteral
	//
	//	".." upperBound=BoundLiteral "]") ";";
	public ReferenceElements getReferenceAccess() {
		return (pReference != null) ? pReference : (pReference = new ReferenceElements());
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}

	//JpaAnnotation:
	//
	//	EntityAnnotation | PropertyAnnotation | ReferenceAnnotation;
	public JpaAnnotationElements getJpaAnnotationAccess() {
		return (pJpaAnnotation != null) ? pJpaAnnotation : (pJpaAnnotation = new JpaAnnotationElements());
	}
	
	public ParserRule getJpaAnnotationRule() {
		return getJpaAnnotationAccess().getRule();
	}

	//EntityAnnotation:
	//
	//	EmbeddableAnnot | CachableAnnot;
	public EntityAnnotationElements getEntityAnnotationAccess() {
		return (pEntityAnnotation != null) ? pEntityAnnotation : (pEntityAnnotation = new EntityAnnotationElements());
	}
	
	public ParserRule getEntityAnnotationRule() {
		return getEntityAnnotationAccess().getRule();
	}

	//PropertyAnnotation:
	//
	//	IdAnnot | NullableAnnot | UniqueAnnot | LobAnnot;
	public PropertyAnnotationElements getPropertyAnnotationAccess() {
		return (pPropertyAnnotation != null) ? pPropertyAnnotation : (pPropertyAnnotation = new PropertyAnnotationElements());
	}
	
	public ParserRule getPropertyAnnotationRule() {
		return getPropertyAnnotationAccess().getRule();
	}

	//ReferenceAnnotation:
	//
	//	ManyToManyAnnot | ManyToOneAnnot | OneToManyAnnot | OneToOneAnnot;
	public ReferenceAnnotationElements getReferenceAnnotationAccess() {
		return (pReferenceAnnotation != null) ? pReferenceAnnotation : (pReferenceAnnotation = new ReferenceAnnotationElements());
	}
	
	public ParserRule getReferenceAnnotationRule() {
		return getReferenceAnnotationAccess().getRule();
	}

	//EmbeddableAnnot:
	//
	//	{EmbeddableAnnot} "@" name="Embeddable";
	public EmbeddableAnnotElements getEmbeddableAnnotAccess() {
		return (pEmbeddableAnnot != null) ? pEmbeddableAnnot : (pEmbeddableAnnot = new EmbeddableAnnotElements());
	}
	
	public ParserRule getEmbeddableAnnotRule() {
		return getEmbeddableAnnotAccess().getRule();
	}

	//CachableAnnot:
	//
	//	{CachableAnnot} "@" name="Cachable";
	public CachableAnnotElements getCachableAnnotAccess() {
		return (pCachableAnnot != null) ? pCachableAnnot : (pCachableAnnot = new CachableAnnotElements());
	}
	
	public ParserRule getCachableAnnotRule() {
		return getCachableAnnotAccess().getRule();
	}

	//IdAnnot:
	//
	//	{IdAnnot} "@" name="ID";
	public IdAnnotElements getIdAnnotAccess() {
		return (pIdAnnot != null) ? pIdAnnot : (pIdAnnot = new IdAnnotElements());
	}
	
	public ParserRule getIdAnnotRule() {
		return getIdAnnotAccess().getRule();
	}

	//NullableAnnot:
	//
	//	{NullableAnnot} "@" name="Nullable";
	public NullableAnnotElements getNullableAnnotAccess() {
		return (pNullableAnnot != null) ? pNullableAnnot : (pNullableAnnot = new NullableAnnotElements());
	}
	
	public ParserRule getNullableAnnotRule() {
		return getNullableAnnotAccess().getRule();
	}

	//UniqueAnnot:
	//
	//	{UniqueAnnot} "@" name="Unique";
	public UniqueAnnotElements getUniqueAnnotAccess() {
		return (pUniqueAnnot != null) ? pUniqueAnnot : (pUniqueAnnot = new UniqueAnnotElements());
	}
	
	public ParserRule getUniqueAnnotRule() {
		return getUniqueAnnotAccess().getRule();
	}

	//LobAnnot:
	//
	//	{LobAnnot} "@" name="Lob";
	public LobAnnotElements getLobAnnotAccess() {
		return (pLobAnnot != null) ? pLobAnnot : (pLobAnnot = new LobAnnotElements());
	}
	
	public ParserRule getLobAnnotRule() {
		return getLobAnnotAccess().getRule();
	}

	//ManyToManyAnnot:
	//
	//	{ManyToManyAnnot} "@" name="ManyToMany" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")?
	//
	//	(", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype"
	//
	//	"." fetch=FetchType)? ")")?;
	public ManyToManyAnnotElements getManyToManyAnnotAccess() {
		return (pManyToManyAnnot != null) ? pManyToManyAnnot : (pManyToManyAnnot = new ManyToManyAnnotElements());
	}
	
	public ParserRule getManyToManyAnnotRule() {
		return getManyToManyAnnotAccess().getRule();
	}

	//ManyToOneAnnot:
	//
	//	{ManyToOneAnnot} "@" name="ManyToOne" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference ".class")?
	//
	//	(", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", " "fetch=Fetchtype"
	//
	//	"." fetch=FetchType)? ")")?;
	public ManyToOneAnnotElements getManyToOneAnnotAccess() {
		return (pManyToOneAnnot != null) ? pManyToOneAnnot : (pManyToOneAnnot = new ManyToOneAnnotElements());
	}
	
	public ParserRule getManyToOneAnnotRule() {
		return getManyToOneAnnotAccess().getRule();
	}

	//OneToManyAnnot:
	//
	//	{OneToManyAnnot} "@" name="OneToMany" ("(" targetEntity=ParamTargetEntity? (", " mappedBy=ParamMappedBy)? (", "
	//
	//	cascade=ParamCascade)? (", " fetch=ParamFetch)? (", " orphanRemoval=ParamOrphanRemoval)? ")")?;
	public OneToManyAnnotElements getOneToManyAnnotAccess() {
		return (pOneToManyAnnot != null) ? pOneToManyAnnot : (pOneToManyAnnot = new OneToManyAnnotElements());
	}
	
	public ParserRule getOneToManyAnnotRule() {
		return getOneToManyAnnotAccess().getRule();
	}

	//OneToOneAnnot:
	//
	//	{OneToOneAnnot} "@" name="OneToOne" ("(" ("targetEntity=" targetEntity=JvmParameterizedTypeReference "."
	//
	//	class=classSuffix)? (", " "mappedBy=" mappedBy=ValidID)? (", " "cascade=CascadeType" "." cascade=CascadeType)? (", "
	//
	//	"orphanRemoval=" orphanRemoval=booleanType)? (", " "fetch=Fetchtype" "." fetch=FetchType)? ")")?;
	public OneToOneAnnotElements getOneToOneAnnotAccess() {
		return (pOneToOneAnnot != null) ? pOneToOneAnnot : (pOneToOneAnnot = new OneToOneAnnotElements());
	}
	
	public ParserRule getOneToOneAnnotRule() {
		return getOneToOneAnnotAccess().getRule();
	}

	//enum CascadeType:
	//
	//	ALL | MERGE | PERSIST | REFRESH | REMOVE;
	public CascadeTypeElements getCascadeTypeAccess() {
		return (unknownRuleCascadeType != null) ? unknownRuleCascadeType : (unknownRuleCascadeType = new CascadeTypeElements());
	}
	
	public EnumRule getCascadeTypeRule() {
		return getCascadeTypeAccess().getRule();
	}

	//enum FetchType:
	//
	//	LAZY | EAGER;
	public FetchTypeElements getFetchTypeAccess() {
		return (unknownRuleFetchType != null) ? unknownRuleFetchType : (unknownRuleFetchType = new FetchTypeElements());
	}
	
	public EnumRule getFetchTypeRule() {
		return getFetchTypeAccess().getRule();
	}

	//enum booleanType:
	//
	//	true | false;
	public BooleanTypeElements getBooleanTypeAccess() {
		return (unknownRuleBooleanType != null) ? unknownRuleBooleanType : (unknownRuleBooleanType = new BooleanTypeElements());
	}
	
	public EnumRule getBooleanTypeRule() {
		return getBooleanTypeAccess().getRule();
	}

	//enum classSuffix:
	//
	//	class;
	public ClassSuffixElements getClassSuffixAccess() {
		return (unknownRuleClassSuffix != null) ? unknownRuleClassSuffix : (unknownRuleClassSuffix = new ClassSuffixElements());
	}
	
	public EnumRule getClassSuffixRule() {
		return getClassSuffixAccess().getRule();
	}

	//ParamTargetEntity:
	//
	//	"targetEntity=" targetEntity=JvmParameterizedTypeReference "." class=classSuffix;
	public ParamTargetEntityElements getParamTargetEntityAccess() {
		return (pParamTargetEntity != null) ? pParamTargetEntity : (pParamTargetEntity = new ParamTargetEntityElements());
	}
	
	public ParserRule getParamTargetEntityRule() {
		return getParamTargetEntityAccess().getRule();
	}

	//ParamMappedBy:
	//
	//	"mappedBy=" mappedBy=ValidID;
	public ParamMappedByElements getParamMappedByAccess() {
		return (pParamMappedBy != null) ? pParamMappedBy : (pParamMappedBy = new ParamMappedByElements());
	}
	
	public ParserRule getParamMappedByRule() {
		return getParamMappedByAccess().getRule();
	}

	//ParamCascade:
	//
	//	"cascade=CascadeType" "." cascade=CascadeType;
	public ParamCascadeElements getParamCascadeAccess() {
		return (pParamCascade != null) ? pParamCascade : (pParamCascade = new ParamCascadeElements());
	}
	
	public ParserRule getParamCascadeRule() {
		return getParamCascadeAccess().getRule();
	}

	//ParamFetch:
	//
	//	"fetch=Fetchtype" "." fetch=FetchType;
	public ParamFetchElements getParamFetchAccess() {
		return (pParamFetch != null) ? pParamFetch : (pParamFetch = new ParamFetchElements());
	}
	
	public ParserRule getParamFetchRule() {
		return getParamFetchAccess().getRule();
	}

	//ParamOrphanRemoval:
	//
	//	"orphanRemoval=" orphanRemoval=booleanType;
	public ParamOrphanRemovalElements getParamOrphanRemovalAccess() {
		return (pParamOrphanRemoval != null) ? pParamOrphanRemoval : (pParamOrphanRemoval = new ParamOrphanRemovalElements());
	}
	
	public ParserRule getParamOrphanRemovalRule() {
		return getParamOrphanRemovalAccess().getRule();
	}

	//EntityModel:
	//
	//	package=Package & elements+=AbstractElement*;
	public EntityGrammarAccess.EntityModelElements getEntityModelAccess() {
		return gaEntity.getEntityModelAccess();
	}
	
	public ParserRule getEntityModelRule() {
		return getEntityModelAccess().getRule();
	}

	//Package:
	//
	//	"package" name=QualifiedName ";";
	public EntityGrammarAccess.PackageElements getPackageAccess() {
		return gaEntity.getPackageAccess();
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	//AbstractElement:
	//
	//	Import | Entity;
	public EntityGrammarAccess.AbstractElementElements getAbstractElementAccess() {
		return gaEntity.getAbstractElementAccess();
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}

	//Import:
	//
	//	"import" importedNamespace=QualifiedNameWithWildCard ";";
	public EntityGrammarAccess.ImportElements getImportAccess() {
		return gaEntity.getImportAccess();
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//AbstractFeature:
	//
	//	Property | Reference | Embedds | Operation;
	public EntityGrammarAccess.AbstractFeatureElements getAbstractFeatureAccess() {
		return gaEntity.getAbstractFeatureAccess();
	}
	
	public ParserRule getAbstractFeatureRule() {
		return getAbstractFeatureAccess().getRule();
	}

	//Embedds:
	//
	//	"embedds" type=JvmTypeReference name=ValidID ";";
	public EntityGrammarAccess.EmbeddsElements getEmbeddsAccess() {
		return gaEntity.getEmbeddsAccess();
	}
	
	public ParserRule getEmbeddsRule() {
		return getEmbeddsAccess().getRule();
	}

	//Operation:
	//
	//	operationAnnotation+=XAnnotation* modifier=Modifier? "def" type=JvmTypeReference name=ValidID "("
	//
	//	(params+=FullJvmFormalParameter ("," params+=FullJvmFormalParameter)*)? ")" body=MyBlockExpression;
	public EntityGrammarAccess.OperationElements getOperationAccess() {
		return gaEntity.getOperationAccess();
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}

	//Modifier:
	//
	//	final?="final"? & static?="static"? & visibility=Visibility;
	public EntityGrammarAccess.ModifierElements getModifierAccess() {
		return gaEntity.getModifierAccess();
	}
	
	public ParserRule getModifierRule() {
		return getModifierAccess().getRule();
	}

	//enum Visibility:
	//
	//	PACKAGE="package" | PRIVATE="private" | PROTECTED="protected" | PUBLIC="public";
	public EntityGrammarAccess.VisibilityElements getVisibilityAccess() {
		return gaEntity.getVisibilityAccess();
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}

	//enum RefType:
	//
	//	REFERS="ref" | CONTAINS="contains";
	public EntityGrammarAccess.RefTypeElements getRefTypeAccess() {
		return gaEntity.getRefTypeAccess();
	}
	
	public EnumRule getRefTypeRule() {
		return getRefTypeAccess().getRule();
	}

	//enum BoundLiteral:
	//
	//	ONE="1" | MANY="n";
	public EntityGrammarAccess.BoundLiteralElements getBoundLiteralAccess() {
		return gaEntity.getBoundLiteralAccess();
	}
	
	public EnumRule getBoundLiteralRule() {
		return getBoundLiteralAccess().getRule();
	}

	//QualifiedNameWithWildCard:
	//
	//	QualifiedName ("." "*")?;
	public EntityGrammarAccess.QualifiedNameWithWildCardElements getQualifiedNameWithWildCardAccess() {
		return gaEntity.getQualifiedNameWithWildCardAccess();
	}
	
	public ParserRule getQualifiedNameWithWildCardRule() {
		return getQualifiedNameWithWildCardAccess().getRule();
	}

	//MyBlockExpression returns xbase::XExpression:
	//
	//	{xbase::XBlockExpression} "{" (expressions+=XExpressionInsideBlock ";")* "}";
	public EntityGrammarAccess.MyBlockExpressionElements getMyBlockExpressionAccess() {
		return gaEntity.getMyBlockExpressionAccess();
	}
	
	public ParserRule getMyBlockExpressionRule() {
		return getMyBlockExpressionAccess().getRule();
	}

	//XAnnotation:
	//
	//	{XAnnotation} "@" annotationType=[types::JvmAnnotationType|QualifiedName] ("("
	//
	//	(elementValuePairs+=XAnnotationElementValuePair ("," elementValuePairs+=XAnnotationElementValuePair)* |
	//
	//	value=XAnnotationElementValue)? ")")?;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElements getXAnnotationAccess() {
		return gaEntity.getXAnnotationAccess();
	}
	
	public ParserRule getXAnnotationRule() {
		return getXAnnotationAccess().getRule();
	}

	//XAnnotationElementValuePair:
	//
	//	element=[types::JvmOperation|ValidID] "=" value=XAnnotationElementValue;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValuePairElements getXAnnotationElementValuePairAccess() {
		return gaEntity.getXAnnotationElementValuePairAccess();
	}
	
	public ParserRule getXAnnotationElementValuePairRule() {
		return getXAnnotationElementValuePairAccess().getRule();
	}

	//XAnnotationElementValueStringConcatenation returns xbase::XExpression:
	//
	//	XAnnotationElementValue ({XAnnotationElementValueBinaryOperation.leftOperand=current} operator="+"
	//
	//	rightOperand=XAnnotationElementValue)*;
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueStringConcatenationElements getXAnnotationElementValueStringConcatenationAccess() {
		return gaEntity.getXAnnotationElementValueStringConcatenationAccess();
	}
	
	public ParserRule getXAnnotationElementValueStringConcatenationRule() {
		return getXAnnotationElementValueStringConcatenationAccess().getRule();
	}

	//XAnnotationElementValue returns xbase::XExpression:
	//
	//	XAnnotation | XAnnotationValueArray | XStringLiteral | XBooleanLiteral | XNumberLiteral | XTypeLiteral |
	//
	//	XAnnotationValueFieldReference | "(" XAnnotationElementValueStringConcatenation ")";
	public XbaseWithAnnotationsGrammarAccess.XAnnotationElementValueElements getXAnnotationElementValueAccess() {
		return gaEntity.getXAnnotationElementValueAccess();
	}
	
	public ParserRule getXAnnotationElementValueRule() {
		return getXAnnotationElementValueAccess().getRule();
	}

	//XAnnotationValueFieldReference returns xbase::XExpression:
	//
	//	{xbase::XFeatureCall} declaringType=[types::JvmDeclaredType|StaticQualifier]?
	//
	//	feature=[types::JvmIdentifiableElement|IdOrSuper];
	public XbaseWithAnnotationsGrammarAccess.XAnnotationValueFieldReferenceElements getXAnnotationValueFieldReferenceAccess() {
		return gaEntity.getXAnnotationValueFieldReferenceAccess();
	}
	
	public ParserRule getXAnnotationValueFieldReferenceRule() {
		return getXAnnotationValueFieldReferenceAccess().getRule();
	}

	//XAnnotationValueArray returns xbase::XExpression:
	//
	//	{XAnnotationValueArray} "{" values+=XAnnotationElementValue ("," values+=XAnnotationElementValue)* "}";
	public XbaseWithAnnotationsGrammarAccess.XAnnotationValueArrayElements getXAnnotationValueArrayAccess() {
		return gaEntity.getXAnnotationValueArrayAccess();
	}
	
	public ParserRule getXAnnotationValueArrayRule() {
		return getXAnnotationValueArrayAccess().getRule();
	}

	//XExpression:
	//
	//	XAssignment;
	public XbaseGrammarAccess.XExpressionElements getXExpressionAccess() {
		return gaEntity.getXExpressionAccess();
	}
	
	public ParserRule getXExpressionRule() {
		return getXExpressionAccess().getRule();
	}

	//XAssignment returns XExpression:
	//
	//	{XAssignment} / * (declaringType=[types::JvmDeclaredType] '::')? * / feature=[types::JvmIdentifiableElement|ValidID]
	//
	//	OpSingleAssign value=XAssignment | XOrExpression (=> ({XBinaryOperation.leftOperand=current}
	//
	//	feature=[types::JvmIdentifiableElement|OpMultiAssign]) rightOperand=XAssignment)?;
	public XbaseGrammarAccess.XAssignmentElements getXAssignmentAccess() {
		return gaEntity.getXAssignmentAccess();
	}
	
	public ParserRule getXAssignmentRule() {
		return getXAssignmentAccess().getRule();
	}

	//OpSingleAssign:
	//
	//	"=";
	public XbaseGrammarAccess.OpSingleAssignElements getOpSingleAssignAccess() {
		return gaEntity.getOpSingleAssignAccess();
	}
	
	public ParserRule getOpSingleAssignRule() {
		return getOpSingleAssignAccess().getRule();
	}

	//OpMultiAssign:
	//
	//	"+=";
	public XbaseGrammarAccess.OpMultiAssignElements getOpMultiAssignAccess() {
		return gaEntity.getOpMultiAssignAccess();
	}
	
	public ParserRule getOpMultiAssignRule() {
		return getOpMultiAssignAccess().getRule();
	}

	//XOrExpression returns XExpression:
	//
	//	XAndExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOr])
	//
	//	rightOperand=XAndExpression)*;
	public XbaseGrammarAccess.XOrExpressionElements getXOrExpressionAccess() {
		return gaEntity.getXOrExpressionAccess();
	}
	
	public ParserRule getXOrExpressionRule() {
		return getXOrExpressionAccess().getRule();
	}

	//OpOr:
	//
	//	"||";
	public XbaseGrammarAccess.OpOrElements getOpOrAccess() {
		return gaEntity.getOpOrAccess();
	}
	
	public ParserRule getOpOrRule() {
		return getOpOrAccess().getRule();
	}

	//XAndExpression returns XExpression:
	//
	//	XEqualityExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAnd])
	//
	//	rightOperand=XEqualityExpression)*;
	public XbaseGrammarAccess.XAndExpressionElements getXAndExpressionAccess() {
		return gaEntity.getXAndExpressionAccess();
	}
	
	public ParserRule getXAndExpressionRule() {
		return getXAndExpressionAccess().getRule();
	}

	//OpAnd:
	//
	//	"&&";
	public XbaseGrammarAccess.OpAndElements getOpAndAccess() {
		return gaEntity.getOpAndAccess();
	}
	
	public ParserRule getOpAndRule() {
		return getOpAndAccess().getRule();
	}

	//XEqualityExpression returns XExpression:
	//
	//	XRelationalExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpEquality])
	//
	//	rightOperand=XRelationalExpression)*;
	public XbaseGrammarAccess.XEqualityExpressionElements getXEqualityExpressionAccess() {
		return gaEntity.getXEqualityExpressionAccess();
	}
	
	public ParserRule getXEqualityExpressionRule() {
		return getXEqualityExpressionAccess().getRule();
	}

	//OpEquality:
	//
	//	"==" | "!=";
	public XbaseGrammarAccess.OpEqualityElements getOpEqualityAccess() {
		return gaEntity.getOpEqualityAccess();
	}
	
	public ParserRule getOpEqualityRule() {
		return getOpEqualityAccess().getRule();
	}

	//XRelationalExpression returns XExpression:
	//
	//	XOtherOperatorExpression (=> ({XInstanceOfExpression.expression=current} "instanceof") type=JvmTypeReference | =>
	//
	//	({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpCompare])
	//
	//	rightOperand=XOtherOperatorExpression)*;
	public XbaseGrammarAccess.XRelationalExpressionElements getXRelationalExpressionAccess() {
		return gaEntity.getXRelationalExpressionAccess();
	}
	
	public ParserRule getXRelationalExpressionRule() {
		return getXRelationalExpressionAccess().getRule();
	}

	//OpCompare:
	//
	//	">=" | "<=" | ">" | "<";
	public XbaseGrammarAccess.OpCompareElements getOpCompareAccess() {
		return gaEntity.getOpCompareAccess();
	}
	
	public ParserRule getOpCompareRule() {
		return getOpCompareAccess().getRule();
	}

	//XOtherOperatorExpression returns XExpression:
	//
	//	XAdditiveExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpOther])
	//
	//	rightOperand=XAdditiveExpression)*;
	public XbaseGrammarAccess.XOtherOperatorExpressionElements getXOtherOperatorExpressionAccess() {
		return gaEntity.getXOtherOperatorExpressionAccess();
	}
	
	public ParserRule getXOtherOperatorExpressionRule() {
		return getXOtherOperatorExpressionAccess().getRule();
	}

	//OpOther:
	//
	//	"->" | ".." | "=>" | ">" (=> (">" ">") | ">") | "<" (=> ("<" "<") | "<") | "<>" | "?:" | "<=>";
	public XbaseGrammarAccess.OpOtherElements getOpOtherAccess() {
		return gaEntity.getOpOtherAccess();
	}
	
	public ParserRule getOpOtherRule() {
		return getOpOtherAccess().getRule();
	}

	//XAdditiveExpression returns XExpression:
	//
	//	XMultiplicativeExpression (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpAdd])
	//
	//	rightOperand=XMultiplicativeExpression)*;
	public XbaseGrammarAccess.XAdditiveExpressionElements getXAdditiveExpressionAccess() {
		return gaEntity.getXAdditiveExpressionAccess();
	}
	
	public ParserRule getXAdditiveExpressionRule() {
		return getXAdditiveExpressionAccess().getRule();
	}

	//OpAdd:
	//
	//	"+" | "-";
	public XbaseGrammarAccess.OpAddElements getOpAddAccess() {
		return gaEntity.getOpAddAccess();
	}
	
	public ParserRule getOpAddRule() {
		return getOpAddAccess().getRule();
	}

	//XMultiplicativeExpression returns XExpression:
	//
	//	XUnaryOperation (=> ({XBinaryOperation.leftOperand=current} feature=[types::JvmIdentifiableElement|OpMulti])
	//
	//	rightOperand=XUnaryOperation)*;
	public XbaseGrammarAccess.XMultiplicativeExpressionElements getXMultiplicativeExpressionAccess() {
		return gaEntity.getXMultiplicativeExpressionAccess();
	}
	
	public ParserRule getXMultiplicativeExpressionRule() {
		return getXMultiplicativeExpressionAccess().getRule();
	}

	//OpMulti:
	//
	//	"*" | "**" | "/" | "%";
	public XbaseGrammarAccess.OpMultiElements getOpMultiAccess() {
		return gaEntity.getOpMultiAccess();
	}
	
	public ParserRule getOpMultiRule() {
		return getOpMultiAccess().getRule();
	}

	//XUnaryOperation returns XExpression:
	//
	//	{XUnaryOperation} feature=[types::JvmIdentifiableElement|OpUnary] operand=XCastedExpression | XCastedExpression;
	public XbaseGrammarAccess.XUnaryOperationElements getXUnaryOperationAccess() {
		return gaEntity.getXUnaryOperationAccess();
	}
	
	public ParserRule getXUnaryOperationRule() {
		return getXUnaryOperationAccess().getRule();
	}

	//OpUnary:
	//
	//	"!" | "-" | "+";
	public XbaseGrammarAccess.OpUnaryElements getOpUnaryAccess() {
		return gaEntity.getOpUnaryAccess();
	}
	
	public ParserRule getOpUnaryRule() {
		return getOpUnaryAccess().getRule();
	}

	//XCastedExpression returns XExpression:
	//
	//	XMemberFeatureCall (=> ({XCastedExpression.target=current} "as") type=JvmTypeReference)*;
	public XbaseGrammarAccess.XCastedExpressionElements getXCastedExpressionAccess() {
		return gaEntity.getXCastedExpressionAccess();
	}
	
	public ParserRule getXCastedExpressionRule() {
		return getXCastedExpressionAccess().getRule();
	}

	//XMemberFeatureCall returns XExpression:
	//
	//	XPrimaryExpression (=> ({XAssignment.assignable=current} "." feature=[types::JvmIdentifiableElement|ValidID]
	//
	//	OpSingleAssign) value=XAssignment | => ({XMemberFeatureCall.memberCallTarget=current} ("." | nullSafe?="?." |
	//
	//	spreading?="*.")) ("<" typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")?
	//
	//	feature=[types::JvmIdentifiableElement|ValidID] (=> explicitOperationCall?="(" (memberCallArguments+=XShortClosure |
	//
	//	memberCallArguments+=XExpression ("," memberCallArguments+=XExpression)*)? ")")? memberCallArguments+=XClosure?)*;
	public XbaseGrammarAccess.XMemberFeatureCallElements getXMemberFeatureCallAccess() {
		return gaEntity.getXMemberFeatureCallAccess();
	}
	
	public ParserRule getXMemberFeatureCallRule() {
		return getXMemberFeatureCallAccess().getRule();
	}

	//XPrimaryExpression returns XExpression:
	//
	//	XConstructorCall | XBlockExpression | XSwitchExpression | XFeatureCall | XLiteral | XIfExpression |
	//
	//	XForLoopExpression | XWhileExpression | XDoWhileExpression | XThrowExpression | XReturnExpression |
	//
	//	XTryCatchFinallyExpression | XParenthesizedExpression;
	public XbaseGrammarAccess.XPrimaryExpressionElements getXPrimaryExpressionAccess() {
		return gaEntity.getXPrimaryExpressionAccess();
	}
	
	public ParserRule getXPrimaryExpressionRule() {
		return getXPrimaryExpressionAccess().getRule();
	}

	//XLiteral returns XExpression:
	//
	//	XClosure | XBooleanLiteral | XNumberLiteral | XNullLiteral | XStringLiteral | XTypeLiteral;
	public XbaseGrammarAccess.XLiteralElements getXLiteralAccess() {
		return gaEntity.getXLiteralAccess();
	}
	
	public ParserRule getXLiteralRule() {
		return getXLiteralAccess().getRule();
	}

	//XClosure returns XExpression:
	//
	//	=> ({XClosure} "[") => ((declaredFormalParameters+=JvmFormalParameter (","
	//
	//	declaredFormalParameters+=JvmFormalParameter)*)? explicitSyntax?="|")? expression=XExpressionInClosure "]";
	public XbaseGrammarAccess.XClosureElements getXClosureAccess() {
		return gaEntity.getXClosureAccess();
	}
	
	public ParserRule getXClosureRule() {
		return getXClosureAccess().getRule();
	}

	//XExpressionInClosure returns XExpression:
	//
	//	{XBlockExpression} (expressions+=XExpressionInsideBlock ";"?)*;
	public XbaseGrammarAccess.XExpressionInClosureElements getXExpressionInClosureAccess() {
		return gaEntity.getXExpressionInClosureAccess();
	}
	
	public ParserRule getXExpressionInClosureRule() {
		return getXExpressionInClosureAccess().getRule();
	}

	//XShortClosure returns XExpression:
	//
	//	=> ({XClosure} (declaredFormalParameters+=JvmFormalParameter ("," declaredFormalParameters+=JvmFormalParameter)*)?
	//
	//	explicitSyntax?="|") expression=XExpression;
	public XbaseGrammarAccess.XShortClosureElements getXShortClosureAccess() {
		return gaEntity.getXShortClosureAccess();
	}
	
	public ParserRule getXShortClosureRule() {
		return getXShortClosureAccess().getRule();
	}

	//XParenthesizedExpression returns XExpression:
	//
	//	"(" XExpression ")";
	public XbaseGrammarAccess.XParenthesizedExpressionElements getXParenthesizedExpressionAccess() {
		return gaEntity.getXParenthesizedExpressionAccess();
	}
	
	public ParserRule getXParenthesizedExpressionRule() {
		return getXParenthesizedExpressionAccess().getRule();
	}

	//XIfExpression returns XExpression:
	//
	//	{XIfExpression} "if" "(" if=XExpression ")" then=XExpression ("else" else=XExpression)?;
	public XbaseGrammarAccess.XIfExpressionElements getXIfExpressionAccess() {
		return gaEntity.getXIfExpressionAccess();
	}
	
	public ParserRule getXIfExpressionRule() {
		return getXIfExpressionAccess().getRule();
	}

	//XSwitchExpression returns XExpression:
	//
	//	{XSwitchExpression} "switch" (=> (localVarName=ValidID ":")? switch=XExpression | => ("(" localVarName=ValidID ":")
	//
	//	switch=XExpression ")") "{" cases+=XCasePart+ ("default" ":" default=XExpression)? "}";
	public XbaseGrammarAccess.XSwitchExpressionElements getXSwitchExpressionAccess() {
		return gaEntity.getXSwitchExpressionAccess();
	}
	
	public ParserRule getXSwitchExpressionRule() {
		return getXSwitchExpressionAccess().getRule();
	}

	//XCasePart:
	//
	//	typeGuard=JvmTypeReference? ("case" case=XExpression)? ":" then=XExpression;
	public XbaseGrammarAccess.XCasePartElements getXCasePartAccess() {
		return gaEntity.getXCasePartAccess();
	}
	
	public ParserRule getXCasePartRule() {
		return getXCasePartAccess().getRule();
	}

	//XForLoopExpression returns XExpression:
	//
	//	{XForLoopExpression} "for" "(" declaredParam=JvmFormalParameter ":" forExpression=XExpression ")"
	//
	//	eachExpression=XExpression;
	public XbaseGrammarAccess.XForLoopExpressionElements getXForLoopExpressionAccess() {
		return gaEntity.getXForLoopExpressionAccess();
	}
	
	public ParserRule getXForLoopExpressionRule() {
		return getXForLoopExpressionAccess().getRule();
	}

	//XWhileExpression returns XExpression:
	//
	//	{XWhileExpression} "while" "(" predicate=XExpression ")" body=XExpression;
	public XbaseGrammarAccess.XWhileExpressionElements getXWhileExpressionAccess() {
		return gaEntity.getXWhileExpressionAccess();
	}
	
	public ParserRule getXWhileExpressionRule() {
		return getXWhileExpressionAccess().getRule();
	}

	//XDoWhileExpression returns XExpression:
	//
	//	{XDoWhileExpression} "do" body=XExpression "while" "(" predicate=XExpression ")";
	public XbaseGrammarAccess.XDoWhileExpressionElements getXDoWhileExpressionAccess() {
		return gaEntity.getXDoWhileExpressionAccess();
	}
	
	public ParserRule getXDoWhileExpressionRule() {
		return getXDoWhileExpressionAccess().getRule();
	}

	//XBlockExpression returns XExpression:
	//
	//	{XBlockExpression} "{" (expressions+=XExpressionInsideBlock ";"?)* "}";
	public XbaseGrammarAccess.XBlockExpressionElements getXBlockExpressionAccess() {
		return gaEntity.getXBlockExpressionAccess();
	}
	
	public ParserRule getXBlockExpressionRule() {
		return getXBlockExpressionAccess().getRule();
	}

	//XExpressionInsideBlock returns XExpression:
	//
	//	XVariableDeclaration | XExpression;
	public XbaseGrammarAccess.XExpressionInsideBlockElements getXExpressionInsideBlockAccess() {
		return gaEntity.getXExpressionInsideBlockAccess();
	}
	
	public ParserRule getXExpressionInsideBlockRule() {
		return getXExpressionInsideBlockAccess().getRule();
	}

	//XVariableDeclaration returns XExpression:
	//
	//	{XVariableDeclaration} (writeable?="var" | "val") (=> (type=JvmTypeReference name=ValidID) | name=ValidID) ("="
	//
	//	right=XExpression)?;
	public XbaseGrammarAccess.XVariableDeclarationElements getXVariableDeclarationAccess() {
		return gaEntity.getXVariableDeclarationAccess();
	}
	
	public ParserRule getXVariableDeclarationRule() {
		return getXVariableDeclarationAccess().getRule();
	}

	//JvmFormalParameter returns types::JvmFormalParameter:
	//
	//	parameterType=JvmTypeReference? name=ValidID;
	public XbaseGrammarAccess.JvmFormalParameterElements getJvmFormalParameterAccess() {
		return gaEntity.getJvmFormalParameterAccess();
	}
	
	public ParserRule getJvmFormalParameterRule() {
		return getJvmFormalParameterAccess().getRule();
	}

	//FullJvmFormalParameter returns types::JvmFormalParameter:
	//
	//	parameterType=JvmTypeReference name=ValidID;
	public XbaseGrammarAccess.FullJvmFormalParameterElements getFullJvmFormalParameterAccess() {
		return gaEntity.getFullJvmFormalParameterAccess();
	}
	
	public ParserRule getFullJvmFormalParameterRule() {
		return getFullJvmFormalParameterAccess().getRule();
	}

	//XFeatureCall returns XExpression:
	//
	//	{XFeatureCall} declaringType=[types::JvmDeclaredType|StaticQualifier]? ("<" typeArguments+=JvmArgumentTypeReference
	//
	//	("," typeArguments+=JvmArgumentTypeReference)* ">")? feature=[types::JvmIdentifiableElement|IdOrSuper] (=>
	//
	//	explicitOperationCall?="(" (featureCallArguments+=XShortClosure | featureCallArguments+=XExpression (","
	//
	//	featureCallArguments+=XExpression)*)? ")")? featureCallArguments+=XClosure?;
	public XbaseGrammarAccess.XFeatureCallElements getXFeatureCallAccess() {
		return gaEntity.getXFeatureCallAccess();
	}
	
	public ParserRule getXFeatureCallRule() {
		return getXFeatureCallAccess().getRule();
	}

	//IdOrSuper:
	//
	//	ValidID | "super";
	public XbaseGrammarAccess.IdOrSuperElements getIdOrSuperAccess() {
		return gaEntity.getIdOrSuperAccess();
	}
	
	public ParserRule getIdOrSuperRule() {
		return getIdOrSuperAccess().getRule();
	}

	//// This is a workaround since ANTLR will not be able to resolve
	//
	//
	//// StaticQualifier: ValidID ('::' ValidID)*; and XFeatureCall: (StaticQualifier '::')? ValidID
	//
	//
	//// Make sure to change the value converter if you change the syntax of the StaticQualifier
	// StaticQualifier:
	//
	//	(ValidID "::")+;
	public XbaseGrammarAccess.StaticQualifierElements getStaticQualifierAccess() {
		return gaEntity.getStaticQualifierAccess();
	}
	
	public ParserRule getStaticQualifierRule() {
		return getStaticQualifierAccess().getRule();
	}

	//XConstructorCall returns XExpression:
	//
	//	{XConstructorCall} "new" constructor=[types::JvmConstructor|QualifiedName] ("<"
	//
	//	typeArguments+=JvmArgumentTypeReference ("," typeArguments+=JvmArgumentTypeReference)* ">")? ("("
	//
	//	(arguments+=XShortClosure | arguments+=XExpression ("," arguments+=XExpression)*)? ")")? arguments+=XClosure?;
	public XbaseGrammarAccess.XConstructorCallElements getXConstructorCallAccess() {
		return gaEntity.getXConstructorCallAccess();
	}
	
	public ParserRule getXConstructorCallRule() {
		return getXConstructorCallAccess().getRule();
	}

	//XBooleanLiteral returns XExpression:
	//
	//	{XBooleanLiteral} ("false" | isTrue?="true");
	public XbaseGrammarAccess.XBooleanLiteralElements getXBooleanLiteralAccess() {
		return gaEntity.getXBooleanLiteralAccess();
	}
	
	public ParserRule getXBooleanLiteralRule() {
		return getXBooleanLiteralAccess().getRule();
	}

	//XNullLiteral returns XExpression:
	//
	//	{XNullLiteral} "null";
	public XbaseGrammarAccess.XNullLiteralElements getXNullLiteralAccess() {
		return gaEntity.getXNullLiteralAccess();
	}
	
	public ParserRule getXNullLiteralRule() {
		return getXNullLiteralAccess().getRule();
	}

	//XNumberLiteral returns XExpression:
	//
	//	{XNumberLiteral} value=Number;
	public XbaseGrammarAccess.XNumberLiteralElements getXNumberLiteralAccess() {
		return gaEntity.getXNumberLiteralAccess();
	}
	
	public ParserRule getXNumberLiteralRule() {
		return getXNumberLiteralAccess().getRule();
	}

	//XStringLiteral returns XExpression:
	//
	//	{XStringLiteral} value=STRING;
	public XbaseGrammarAccess.XStringLiteralElements getXStringLiteralAccess() {
		return gaEntity.getXStringLiteralAccess();
	}
	
	public ParserRule getXStringLiteralRule() {
		return getXStringLiteralAccess().getRule();
	}

	//XTypeLiteral returns XExpression:
	//
	//	{XTypeLiteral} "typeof" "(" type=[types::JvmType|QualifiedName] ")";
	public XbaseGrammarAccess.XTypeLiteralElements getXTypeLiteralAccess() {
		return gaEntity.getXTypeLiteralAccess();
	}
	
	public ParserRule getXTypeLiteralRule() {
		return getXTypeLiteralAccess().getRule();
	}

	//XThrowExpression returns XExpression:
	//
	//	{XThrowExpression} "throw" expression=XExpression;
	public XbaseGrammarAccess.XThrowExpressionElements getXThrowExpressionAccess() {
		return gaEntity.getXThrowExpressionAccess();
	}
	
	public ParserRule getXThrowExpressionRule() {
		return getXThrowExpressionAccess().getRule();
	}

	//XReturnExpression returns XExpression:
	//
	//	{XReturnExpression} "return" => expression=XExpression?;
	public XbaseGrammarAccess.XReturnExpressionElements getXReturnExpressionAccess() {
		return gaEntity.getXReturnExpressionAccess();
	}
	
	public ParserRule getXReturnExpressionRule() {
		return getXReturnExpressionAccess().getRule();
	}

	//XTryCatchFinallyExpression returns XExpression:
	//
	//	{XTryCatchFinallyExpression} "try" expression=XExpression (catchClauses+=XCatchClause+ ("finally"
	//
	//	finallyExpression=XExpression)? | "finally" finallyExpression=XExpression);
	public XbaseGrammarAccess.XTryCatchFinallyExpressionElements getXTryCatchFinallyExpressionAccess() {
		return gaEntity.getXTryCatchFinallyExpressionAccess();
	}
	
	public ParserRule getXTryCatchFinallyExpressionRule() {
		return getXTryCatchFinallyExpressionAccess().getRule();
	}

	//XCatchClause:
	//
	//	"catch" "(" declaredParam=FullJvmFormalParameter ")" expression=XExpression;
	public XbaseGrammarAccess.XCatchClauseElements getXCatchClauseAccess() {
		return gaEntity.getXCatchClauseAccess();
	}
	
	public ParserRule getXCatchClauseRule() {
		return getXCatchClauseAccess().getRule();
	}

	//QualifiedName:
	//
	//	ValidID ("." ValidID)*;
	public XbaseGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaEntity.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//Number hidden():
	//
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public XbaseGrammarAccess.NumberElements getNumberAccess() {
		return gaEntity.getNumberAccess();
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	//terminal HEX:
	//
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return gaEntity.getHEXRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return gaEntity.getINTRule();
	} 

	//terminal DECIMAL:
	//
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return gaEntity.getDECIMALRule();
	} 

	//JvmTypeReference:
	//
	//	JvmParameterizedTypeReference => ({JvmGenericArrayTypeReference.componentType=current} "[" "]")* | XFunctionTypeRef;
	public XtypeGrammarAccess.JvmTypeReferenceElements getJvmTypeReferenceAccess() {
		return gaEntity.getJvmTypeReferenceAccess();
	}
	
	public ParserRule getJvmTypeReferenceRule() {
		return getJvmTypeReferenceAccess().getRule();
	}

	//XFunctionTypeRef:
	//
	//	("(" (paramTypes+=JvmTypeReference ("," paramTypes+=JvmTypeReference)*)? ")")? "=>" returnType=JvmTypeReference;
	public XtypeGrammarAccess.XFunctionTypeRefElements getXFunctionTypeRefAccess() {
		return gaEntity.getXFunctionTypeRefAccess();
	}
	
	public ParserRule getXFunctionTypeRefRule() {
		return getXFunctionTypeRefAccess().getRule();
	}

	//JvmParameterizedTypeReference:
	//
	//	type=[JvmType|QualifiedName] ("<" arguments+=JvmArgumentTypeReference ("," arguments+=JvmArgumentTypeReference)*
	//
	//	">")?;
	public XtypeGrammarAccess.JvmParameterizedTypeReferenceElements getJvmParameterizedTypeReferenceAccess() {
		return gaEntity.getJvmParameterizedTypeReferenceAccess();
	}
	
	public ParserRule getJvmParameterizedTypeReferenceRule() {
		return getJvmParameterizedTypeReferenceAccess().getRule();
	}

	//JvmArgumentTypeReference returns JvmTypeReference:
	//
	//	JvmTypeReference | JvmWildcardTypeReference;
	public XtypeGrammarAccess.JvmArgumentTypeReferenceElements getJvmArgumentTypeReferenceAccess() {
		return gaEntity.getJvmArgumentTypeReferenceAccess();
	}
	
	public ParserRule getJvmArgumentTypeReferenceRule() {
		return getJvmArgumentTypeReferenceAccess().getRule();
	}

	//JvmWildcardTypeReference:
	//
	//	{JvmWildcardTypeReference} "?" (constraints+=JvmUpperBound | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmWildcardTypeReferenceElements getJvmWildcardTypeReferenceAccess() {
		return gaEntity.getJvmWildcardTypeReferenceAccess();
	}
	
	public ParserRule getJvmWildcardTypeReferenceRule() {
		return getJvmWildcardTypeReferenceAccess().getRule();
	}

	//JvmUpperBound:
	//
	//	"extends" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundElements getJvmUpperBoundAccess() {
		return gaEntity.getJvmUpperBoundAccess();
	}
	
	public ParserRule getJvmUpperBoundRule() {
		return getJvmUpperBoundAccess().getRule();
	}

	//JvmUpperBoundAnded returns JvmUpperBound:
	//
	//	"&" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmUpperBoundAndedElements getJvmUpperBoundAndedAccess() {
		return gaEntity.getJvmUpperBoundAndedAccess();
	}
	
	public ParserRule getJvmUpperBoundAndedRule() {
		return getJvmUpperBoundAndedAccess().getRule();
	}

	//JvmLowerBound:
	//
	//	"super" typeReference=JvmTypeReference;
	public XtypeGrammarAccess.JvmLowerBoundElements getJvmLowerBoundAccess() {
		return gaEntity.getJvmLowerBoundAccess();
	}
	
	public ParserRule getJvmLowerBoundRule() {
		return getJvmLowerBoundAccess().getRule();
	}

	//JvmTypeParameter:
	//
	//	name=ValidID (constraints+=JvmUpperBound constraints+=JvmUpperBoundAnded* | constraints+=JvmLowerBound)?;
	public XtypeGrammarAccess.JvmTypeParameterElements getJvmTypeParameterAccess() {
		return gaEntity.getJvmTypeParameterAccess();
	}
	
	public ParserRule getJvmTypeParameterRule() {
		return getJvmTypeParameterAccess().getRule();
	}

	//ValidID:
	//
	//	ID;
	public XtypeGrammarAccess.ValidIDElements getValidIDAccess() {
		return gaEntity.getValidIDAccess();
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "$" | "_") ("a".."z" | "A".."Z" | "$" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaEntity.getIDRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaEntity.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaEntity.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaEntity.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaEntity.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaEntity.getANY_OTHERRule();
	} 
}
