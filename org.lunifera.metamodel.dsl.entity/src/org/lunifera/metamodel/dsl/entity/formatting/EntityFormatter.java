/**
 * Copyright (c) 2011 - 2012, Florian Pirchner - lunifera.org
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Sources generated by Xtext
 * 
 * Contributors:
 * 		Florian Pirchner - Initial implementation
 */
package org.lunifera.metamodel.dsl.entity.formatting;

import java.util.List;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;
import org.lunifera.metamodel.dsl.entity.services.EntityGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class EntityFormatter extends AbstractDeclarativeFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {
		EntityGrammarAccess f = (EntityGrammarAccess) getGrammarAccess();

		c.setAutoLinewrap(120);

		c.setLinewrap(1, 2, 3).around(f.getLEntityRule());
		c.setLinewrap(1, 2, 3).around(f.getLPackageRule());
		c.setLinewrap(1, 1, 2).around(f.getLPropertyRule());
		c.setLinewrap(1, 1, 2).around(f.getLReferenceRule());
		c.setLinewrap(1, 1, 2).around(f.getLContainerRule());
		c.setLinewrap(1, 1, 2).around(f.getLContainsRule());
		c.setLinewrap(1, 1, 2).around(f.getLEmbeddsRule());
		c.setLinewrap(1, 1, 2).around(f.getLOperationRule());
		c.setNoSpace().between(
				f.getLMultiplicityAccess().getLeftSquareBracketKeyword_1(),
				f.getLMultiplicityAccess().getRightSquareBracketKeyword_4());
		c.setNoSpace().before(
				f.getLMultiplicityAccess().getLeftSquareBracketKeyword_1());
		c.setNoSpace().after(
				f.getLMultiplicityAccess().getLeftSquareBracketKeyword_1());
		c.setNoSpace().before(
				f.getLMultiplicityAccess().getRightSquareBracketKeyword_4());

		List<Pair<Keyword, Keyword>> pairs = f.findKeywordPairs("{", "}");
		for (Pair<Keyword, Keyword> pair : pairs) {
			c.setIndentation(pair.getFirst(), pair.getSecond());
		}

		c.setLinewrap(0, 1, 2).before(f.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(f.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(f.getML_COMMENTRule());

	}
}
