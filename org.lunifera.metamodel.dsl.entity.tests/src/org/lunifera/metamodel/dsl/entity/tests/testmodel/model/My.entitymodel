/*
 * Copyright (c) 2011 - 2012, Florian Pirchner - lunifera.org
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 * 		Florian Pirchner - Initial implementation
 */
package org.lunifera.metamodel.dsl.^entity.tests.testmodel.model

generator settings {
	checked lifecycle
}

/**
 * Test 112233
 */
entity Library {
	// properties      
	var String name
	var String[*] manyNames
	var List<String>[*] manymanyNames

	// contains 0:1 and 0:n
	contains BookIndex index opposite library
	contains Book[*] books opposite library
}

entity ExtendedLibrary extends Library {
	// embedds the address
	embedds Address address
  
	// simple references
	refers Book lastLendedBook
	refers Book[*] allLendedBooks
	
	var SomeEnum anEnum 
 
	/** 
	 * Calculates the count of lended books
	 */
	def Integer determineLendedBooksCount () {
		return getAllLendedBooks().size
	}
}

enum SomeEnum {
	ONE, TWO
}

embeddable entity Address {
	var String street
	var int number
	var String postalcode
	refers Country country
	refers PostBox[*] postBoxes

	embedds Info info
}

entity PostBox {
	var String id
}

entity Country {
	var String value
	contains Province[*] provinces opposite country

	embedds Info info
}

entity Province {
	container Country country opposite provinces

	embedds Info info
}


entity Book {
	var String name
	container Library library opposite books

}

entity BookIndex {
	var String name
	container Library library opposite index

}

embeddable entity Info {
	var String shortText
	var String longText
}
