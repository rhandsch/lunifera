<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
	<persistence-unit name="dbDerby" transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Client</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Contract</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Developer</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Manager</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Project</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:luniferaDb" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="database" />
		</properties>
	</persistence-unit>

	<persistence-unit name="dbH2" transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Client</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Contract</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Developer</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Manager</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Project</class>
		<properties>
			<property name="eclipselink.target-database"
				value="org.eclipse.persistence.platform.database.H2Platform" />
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:luniferaDB" />
			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="database" />
		</properties>
	</persistence-unit>

	<persistence-unit name="dbHSQL" transaction-type="RESOURCE_LOCAL">
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Client</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Contract</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Developer</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Manager</class>
		<class>org.lunifera.metamodel.dsl.entity.tests.jpa.model.Project</class>
		<properties>
            <property name="javax.persistence.jdbc.driver" value="org.hsqldb.jdbcDriver"/>
			<property name="javax.persistence.jdbc.url" value="jdbc:hsqldb:mem:luniferaDB" />
			<property name="eclipselink.target-database" value="HSQL"/>
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />
			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
			<property name="eclipselink.ddl-generation.output-mode" value="database" />
		</properties>
	</persistence-unit>
	
	
</persistence> 